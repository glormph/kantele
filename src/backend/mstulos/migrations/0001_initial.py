# Generated by Django 3.2.13 on 2023-01-17 16:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('datasets', '0016_dataset_storageshare'),
        ('analysis', '0042_wfoutput_psmscorefield'),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cond_type', models.IntegerField(choices=[(0, 'Sample'), (1, 'Isobaric sample set'), (2, 'File'), (3, 'Sample group'), (4, 'Fraction'), (5, 'Isobaric channel')])),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('upload_complete', models.BooleanField(default=False)),
                ('token', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('organism', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datasets.species')),
            ],
        ),
        migrations.CreateModel(
            name='Modification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mass', models.FloatField()),
                ('unimod_name', models.TextField(unique=True)),
                ('unimod_id', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PeptideMolecule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encoded_pep', models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PeptideSeq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq', models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ResidueMod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('residue', models.TextField()),
                ('mod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.modification')),
            ],
        ),
        migrations.CreateModel(
            name='PSM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fdr', models.FloatField()),
                ('scan', models.IntegerField()),
                ('score', models.FloatField()),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.condition')),
                ('peptide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.peptidemolecule')),
            ],
        ),
        migrations.CreateModel(
            name='ProteinGene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.experiment')),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.gene')),
                ('protein', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.protein')),
            ],
        ),
        migrations.CreateModel(
            name='PeptideProtein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.experiment')),
                ('peptide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.peptideseq')),
                ('protein', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.protein')),
            ],
        ),
        migrations.AddField(
            model_name='peptidemolecule',
            name='sequence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.peptideseq'),
        ),
        migrations.CreateModel(
            name='PeptideIsoQuant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.condition')),
                ('peptide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.peptidemolecule')),
            ],
        ),
        migrations.CreateModel(
            name='PeptideFDR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fdr', models.FloatField()),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.condition')),
                ('peptide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.peptidemolecule')),
            ],
        ),
        migrations.CreateModel(
            name='MoleculeMod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('mod', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.residuemod')),
                ('molecule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.peptidemolecule')),
            ],
        ),
        migrations.CreateModel(
            name='ExpAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='analysis.analysis')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.experiment')),
            ],
        ),
        migrations.AddField(
            model_name='condition',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.experiment'),
        ),
        migrations.AddField(
            model_name='condition',
            name='parent_conds',
            field=models.ManyToManyField(to='mstulos.Condition'),
        ),
        migrations.CreateModel(
            name='AmountPSMsPeptide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.condition')),
                ('peptide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mstulos.peptidemolecule')),
            ],
        ),
        migrations.AddConstraint(
            model_name='psm',
            constraint=models.UniqueConstraint(fields=('condition', 'scan'), name='uni_psmscans'),
        ),
        migrations.AddConstraint(
            model_name='peptidefdr',
            constraint=models.UniqueConstraint(fields=('condition', 'peptide'), name='uni_pepfdr'),
        ),
        migrations.AddConstraint(
            model_name='gene',
            constraint=models.UniqueConstraint(fields=('name', 'organism'), name='uni_gene'),
        ),
        migrations.AddConstraint(
            model_name='amountpsmspeptide',
            constraint=models.UniqueConstraint(fields=('condition', 'peptide'), name='uni_pepnrpsms'),
        ),
    ]
