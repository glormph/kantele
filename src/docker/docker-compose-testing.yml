services:
    web:
        depends_on:
            - db
            - mq
            - storage_mvfiles
            - storage_downloads
            - tulos_ingester
        extends:
            file: docker-compose-base.yml
            service: web
        image: django_test
        build:
            context: ../
            dockerfile: ./docker/Dockerfile
            target: django_test
            args:
                USER_ID: "${USER_ID:-You must run export USER_ID}"
                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
        env_file:
            - testing.env
        volumes:
            - type: bind
              source: ../backend
              target: /kantele
            - type: bind
              source: ../../data/test
              target: /fixtures
            - type: bind 
              source: ../../data/teststorage
              target: /storage
        environment:
            SECRET_KEY: test_secret
            HOST_DOMAIN: 'web'
            TESTING: 1
            PROTOCOL: http
            DB_HOST: db
            RABBITHOST: mq
            TMPSHARE: /storage/tmp
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'
    
    db: 
        image: postgres:14.3
        #user: "${DBUID:-0}:${DBGID:-0}"
        environment:
            POSTGRES_PASSWORD: "${PG_SUPERUSER_PASSWORD}"
            KANTELE_PASSWORD: "${PG_KANTELE_PASSWORD}"
            KANTELE_DB: "${KANTELE_DB_NAME}"
            KANTELE_ROLE: "${PG_KANTELE_USER}"
        volumes:
            - "./create_kantele_db.sh:/docker-entrypoint-initdb.d/create_kantele_db.sh"

    mq:
        extends:
            file: docker-compose-base.yml
            service: mq

    storage_mvfiles:
        extends:
            file: docker-compose-dev.yml
            service: storage
        env_file:
            - testing.env
        command: celery -A kantele worker -Q mv_md5_storage -n storage_mv.%h --concurrency=1
        volumes:
            # Overwrite dev storage here
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            TMPSHARE: '/storage/tmp'
            WEBSHARE: '/storage/web'
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'

    tulos_ingester:
      env_file:
        - testing.env
      extends:
        file: docker-compose-dev.yml
        service: storage
      volumes:
          # Overwrite dev storage here
          - type: bind
            source: ../../data/teststorage
            target: /storage
      command: celery -A kantele worker -Q scaninbox -n storage_downloads.%h --concurrency=1
      environment:
          KANTELEHOST: web
          TMPSHARE: '/storage/tmp'
          ANALYSISSHARE: '/storage/analysis'
          STORAGESHARES: '/storage/oldstorage,/storage/newstorage'

    storage_downloads:
        extends:
            file: docker-compose-dev.yml
            service: storage
        env_file:
            - testing.env
        command: celery -A kantele worker -Q file_download -n storage_downloads.%h --concurrency=1
        volumes:
          # Overwrite dev storage here
            - type: bind
              source: ../../data/teststorage
              target: /storage
        environment:
            KANTELEHOST: web
            TMPSHARE: '/storage/tmp'
            WEBSHARE: '/storage/web'
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'

    analysis:
        extends:
            file: docker-compose-base.yml
            service: web
        depends_on:
            - web
        command: celery -A kantele worker -Q test_analysis -n analysis.%h --concurrency=1
        env_file:
            - testing.env
        volumes:
            - type: bind
              source: ../backend
              target: /kantele
        environment:
            KANTELEHOST: web

# Cannot use jobrunner since it depends on having a DB,
# which is created by web test framework, which we do not know
# when it is finished
