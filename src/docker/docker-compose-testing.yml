
services:
    web:
        depends_on:
            - db
            - mq
            - storage_mvfiles
            - storage_downloads
        extends:
            file: ./docker-compose-base.yml
            service: web
        env_file:
            - ./testing.env
        volumes:
            - type: bind
              source: ../backend
              target: /kantele
            - type: bind
              source: ../../data/test
              target: /fixtures
            - type: bind 
              source: ../../data/fakestorage
              target: /storage
        environment:
            SECRET_KEY: test_secret
            HOST_DOMAIN: 'web'
            TESTING: 1
            PROTOCOL: http
            DB_HOST: db
            RABBITHOST: mq
            STORAGESHARENAMES: "oldstorage,newstorage"
            TMPSHARE: /storage/tmp
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'
    
    db: 
        image: postgres:14.3
        #user: "${DBUID:-0}:${DBGID:-0}"
        environment:
            POSTGRES_PASSWORD: "${PG_SUPERUSER_PASSWORD}"
            KANTELE_PASSWORD: "${PG_KANTELE_PASSWORD}"
            KANTELE_DB: "${KANTELE_DB_NAME}"
            KANTELE_ROLE: "${PG_KANTELE_USER}"
        volumes:
            - "../docker/create_kantele_db.sh:/docker-entrypoint-initdb.d/create_kantele_db.sh"

    mq:
        extends:
            file: ../docker/docker-compose-base.yml
            service: mq

    storage_mvfiles:
        extends:
            file: ../docker/docker-compose-dev.yml
            service: storage
        env_file:
            - ../docker/testing.env
        command: celery -A kantele worker -Q mv_md5_storage -n storage_mv.%h --concurrency=1
        volumes:
            - ../../data/test:/storage
        environment:
            KANTELEHOST: web
            TMPSHARE: '/storage/tmp'
            WEBSHARE: '/storage/web'
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARENAMES: "oldstorage,newstorage"
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'

    storage_downloads:
        extends:
            file: ../docker/docker-compose-dev.yml
            service: storage
        env_file:
            - ../docker/testing.env
        command: celery -A kantele worker -Q file_download -n storage_downloads.%h --concurrency=1
        volumes:
            - ../../data/test:/storage
        environment:
            KANTELEHOST: web
            TMPSHARE: '/storage/tmp'
            WEBSHARE: '/storage/web'
            ANALYSISSHARE: '/storage/analysis'
            STORAGESHARENAMES: "oldstorage,newstorage"
            STORAGESHARES: '/storage/oldstorage,/storage/newstorage'

# Cannot use jobrunner since it depends on having a DB,
# which is created by web test framework, which we do not know
# when it is finished
