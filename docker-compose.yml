# Dev environment docker-compose
#

services:
    web:
        depends_on:
            - db 
        extends:
            file: ./src/docker/docker-compose-base.yml
            service: web
        env_file:
            - ./src/docker/stage.env
        environment:
            PROTOCOL: http
            DB_HOST: db
            #DB_HOST: "${HOST_FQDN}"
            RABBITHOST: mq
            ANALYSISSHARE: '/analysisfiles' # test only, remove
        volumes:
            - ./src/backend:/kantele
            - ./static:/kantele/static
            - "${HOST_UPLOADPATH}:${CONTAINER_UPLOADPATH}"
            - "${HOST_ANALYSISFILES}:${CONTAINER_ANALYSISPATH}"
    
    nginx:
        image: "nginx:1.21"
        depends_on:
            - web
        ports:
            - 80:80
        volumes:
            - ./static:/static
            - ./src/docker/uwsgi_params:/etc/nginx/uwsgi_params
            - ./src/docker/nginx_stage.conf:/etc/nginx/nginx.conf
            - "${HOST_UPLOADPATH}:${CONTAINER_UPLOADPATH}"
            - "${HOST_ANALYSISFILES}:${CONTAINER_ANALYSISPATH}"

    db: 
        extends:
            file: ./src/docker/docker-compose-base.yml
            service: db 
        environment:
            KANTELE_PASSWORD: "${PG_KANTELE_PASSWORD}"
            KANTELE_DB: "${KANTELE_DB_NAME}"
            KANTELE_ROLE: "${PG_KANTELE_USER}"
        volumes:
            - "./src/docker/create_kantele_db.sh:/docker-entrypoint-initdb.d/create_kantele_db.sh"
            - "/mnt/newstorage/backups:/pgbackups"

    mq:
        extends:
            file: ./src/docker/docker-compose-base.yml
            service: mq

    jobrunner:
        depends_on:
            - web 
        extends:
            file: ./src/docker/docker-compose-base.yml
            service: jobrunner
        env_file:
            - ./src/docker/stage.env
        volumes:
            - ./src/backend:/kantele
        environment:
            DB_HOST: db
            RABBITHOST: mq
            HOST_UPLOADDIR: "${CONTAINER_UPLOADPATH}"

    storage_mvfiles:
        depends_on:
            - mq
        env_file:
            - ./src/docker/stage.env
        extends:
            file: ./src/docker/docker-compose-dev.yml
            service: storage

        command: celery -A kantele worker -Q mv_md5_storage -n storage_mv.%h --concurrency=1

    storage_downloads:
        depends_on:
            - mq
        env_file:
            - ./src/docker/stage.env
        extends:
            file: ./src/docker/docker-compose-dev.yml
            service: storage

        command: celery -A kantele worker -Q file_download -n storage_downloads.%h --concurrency=1
        volumes:
            - "./src/docker/test_rsync_sshkey:/home/kantele/.ssh/rsync_key"
        environment:
            RSYNC_HOST: upload_bay_rsync
            RSYNC_SSHUSER: kantele
            RSYNC_SSHPORT: 22
            RSYNC_SSHKEY: "/home/kantele/.ssh/rsync_key"


    upload_bay_rsync:
        image: rsync_stor
        depends_on:
            - mq
        build:
            context: ./src
            dockerfile: ./docker/Dockerfile
            target: rsync_storage
            args:
                USER_ID: "${USER_ID:-You must run export USER_ID}"
                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
        ports:
            - "${RSYNC_SSHPORT}:22"
        volumes:
            - ./src/docker/test_rsync_sshkey.pub:/home/kantele/.ssh/authorized_keys
            - "${HOST_UPLOADPATH}:${CONTAINER_UPLOADPATH}"

            #    analysis:
            #        image: nextflow
            #        build:
            #            context: ./src
            #            dockerfile: ./docker/Dockerfile
            #            target: nextflow
            #            args:
            #                USER_ID: "${USER_ID:-You must run export USER_ID}"
            #                GROUP_ID: "${GROUP_ID:-You must run export GROUP_ID}"
            #        depends_on:
            #            - web
            #        command: celery -A kantele worker -Q nextflow -n analysis.%h --concurrency=1
            #        env_file:
            #            - ./src/docker/stage.env
            #        volumes:
            #            - ./data/storage:/storage
            #            - ./src/backend:/kantele
            #            - ./data/fixtures:/tests
            #            - ./deploy/templates/slurm_conf.j2:/etc/slurm/slurm.conf
            #        environment:
            #            APIKEY: "${APIKEY_ANALYSIS}"
            #            KANTELEHOST: web
            #            PROTOCOL: http
            #            STORAGESHARE: '/storage/storage'
            #            ANALYSISSHARE: '/storage/analysis'
            #            RABBITHOST: mq
            #            RABBIT_VHOST: "${RABBIT_VHOST}"
            #            RABBITUSER: "${RABBITUSER:-guest}"
            #            RABBITPASS: "${RABBITPASS:-guest}"
            #            STAGESHARE: /nxf/stage
            #            NEXTFLOW_RUNDIR: /nxf/runs
            #            NXF_COMMAND: "/nxf/nextflow"
