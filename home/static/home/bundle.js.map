{"version":3,"file":"bundle.js","sources":["../../../frontend/home/node_modules/svelte/internal/index.mjs","../../../frontend/home/node_modules/svelte/store/index.mjs","../../../frontend/home/node_modules/svelte-spa-router/Router.svelte","../../../frontend/home/node_modules/regexparam/dist/regexparam.mjs","../../../frontend/datasets/src/funcJSON.js","../../../frontend/home/src/ImportExternal.svelte","../../../frontend/util.js","../../../frontend/home/src/TableItem.svelte","../../../frontend/home/src/Table.svelte","../../../frontend/home/src/Tabs.svelte","../../../frontend/home/src/DetailBox.svelte","../../../frontend/home/src/DatasetDetails.svelte","../../../frontend/home/src/Datasets.svelte","../../../frontend/home/src/Jobs.svelte","../../../frontend/home/src/FileDetails.svelte","../../../frontend/home/src/Files.svelte","../../../frontend/home/src/Upload.svelte","../../../frontend/home/src/AnalysisDetails.svelte","../../../frontend/home/src/Analysis.svelte","../../../frontend/home/src/Projects.svelte","../../../frontend/home/src/routes.js","../../../frontend/home/src/App.svelte","../../../frontend/home/src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\n// Something's wrong with eslint on this file\n/* eslint-disable no-multiple-empty-lines */\n\nimport {readable, derived} from 'svelte/store'\n\n/**\n * Wraps a route to add route pre-conditions.\n * \n * @param {SvelteComponent} route - Svelte component for the route\n * @param {Object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...Function} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {Object} Wrapped route\n */\nexport function wrap(route, userData, ...conditions) {\n    // Check if we don't have userData\n    if (userData && typeof userData == 'function') {\n        conditions = (conditions && conditions.length) ? conditions : []\n        conditions.unshift(userData)\n        userData = undefined\n    }\n\n    // Parameter route and each item of conditions must be functions\n    if (!route || typeof route != 'function') {\n        throw Error('Invalid parameter route')\n    }\n    if (conditions && conditions.length) {\n        for (let i = 0; i < conditions.length; i++) {\n            if (!conditions[i] || typeof conditions[i] != 'function') {\n                throw Error('Invalid parameter conditions[' + i + ']')\n            }\n        }\n    }\n\n    // Returns an object that contains all the functions to execute too\n    const obj = {route, userData}\n    if (conditions && conditions.length) {\n        obj.conditions = conditions\n    }\n\n    // The _sveltesparouter flag is to confirm the object was created by this router\n    Object.defineProperty(obj, '_sveltesparouter', {\n        value: true\n    })\n\n    return obj\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    getLocation(),\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n */\nexport function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n    }, 0)\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n */\nexport function pop() {\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        window.history.back()\n    }, 0)\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n */\nexport function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        const dest = (location.charAt(0) == '#' ? '' : '#') + location\n        history.replaceState(undefined, undefined, dest)\n\n        // The method above doesn't trigger the hashchange event, so let's do that manually\n        window.dispatchEvent(new Event('hashchange'))\n    }, 0)\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n */\nexport function link(node) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    // Destination must start with '/'\n    const href = node.getAttribute('href')\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute')\n    }\n\n    // Add # to every href attribute\n    node.setAttribute('href', '#' + href)\n}\n</script>\n\n{#if componentParams}\n  <svelte:component this=\"{component}\" params=\"{componentParams}\" />\n{:else}\n  <svelte:component this=\"{component}\" />\n{/if}\n\n<script>\nimport {createEventDispatcher} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent} component - Svelte component for the route\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.route\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n        }\n        else {\n            this.component = component\n            this.conditions = []\n            this.userData = undefined\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, remove it before we run the matching\n        if (prefix && path.startsWith(prefix)) {\n            path = path.substr(prefix.length) || '/'\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            out[this._keys[i]] = matches[++i] || null\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {SvelteComponent} component - Svelte component\n     * @property {string} name - Name of the Svelte component\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {Object} [userData] - Custom data passed by the user\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!this.conditions[i](detail)) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nconst dispatchNextTick = (name, detail) => {\n    // Execute this code when the current call stack is complete\n    setTimeout(() => {\n        dispatch(name, detail)\n    }, 0)\n}\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n$: {\n    // Find a route matching the location\n    component = null\n    let i = 0\n    while (!component && i < routesList.length) {\n        const match = routesList[i].match($loc.location)\n        if (match) {\n            const detail = {\n                component: routesList[i].component,\n                name: routesList[i].component.name,\n                location: $loc.location,\n                querystring: $loc.querystring,\n                userData: routesList[i].userData\n            }\n\n            // Check if the route can be loaded - if all conditions succeed\n            if (!routesList[i].checkConditions(detail)) {\n                // Trigger an event to notify the user\n                dispatchNextTick('conditionsFailed', detail)\n                break\n            }\n            component = routesList[i].component\n            // Set componentParams onloy if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n            // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n            if (match && typeof match == 'object' && Object.keys(match).length) {\n                componentParams = match\n            }\n            else {\n                componentParams = null\n            }\n\n            dispatchNextTick('routeLoaded', detail)\n        }\n        i++\n    }\n}\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","async function parseResponse(response) {\n  let jsonresp;\n  try {\n    jsonresp = await response.json();\n  } catch(error) {\n    // Non-JSON responses, e.g. HTTP 500 server crash\n    return {ok: false, error: 'Server error encountered', status: response.status};\n  }\n  // Deliver HTTP errors if any\n  jsonresp.ok = response.ok;\n  return jsonresp;\n}\n\n\nexport async function getJSON(url) {\n  let response;\n  try {\n    response = await fetch(url);\n  } catch {\n      return {ok: false, error: 'Kantele encountered a network error', status: false}\n  }\n  return await parseResponse(response);\n}\n\n\nexport async function postJSON(url, postdata) {\n  let response;\n  try {\n    response = await fetch(url, {\n      method: 'POST', headers: {\n        'Content-Type': 'application/json'\n      }, body: JSON.stringify(postdata)\n    });\n  } catch {\n    return {ok: false, error: 'Kantele encountered a network error', status: false}\n  }\n  return await parseResponse(response);\n}\n","<script>\nimport { onMount } from 'svelte';\nimport { getJSON, postJSON } from '../../datasets/src/funcJSON.js'\n\nexport let toggleWindow;\n\nlet error;\nlet indir;\nlet shareId;\nlet allshares = [];\nlet dirsaredsets = false;\nlet dirsfound = [];\nlet dsets = {};\nlet instruments = [];\nlet view = 'rawfiles';\n\nasync function initUserUpload() {\n  let resp = await getJSON('/files/external/scan');\n  allshares = resp.shares;\n  shareId = allshares[0].id;\n}\n\nfunction evalDirsDsets() {\n  dirsaredsets = dirsaredsets === false;\n  console.log(dirsfound);\n  if (dirsaredsets) {\n    dirsfound = dirsfound.map(x => Object.assign(x, {dsname: x.dirname.replaceAll('/', '_')}));\n  }\n  console.log(dirsfound);\n}\n\nasync function queueImport() {\n  const data = { \n    dirname: indir,\n    share_id: shareId,\n    dsets: Object.values(dsets),\n  };\n  console.log(data);\n  let resp = await postJSON('/files/external/import', data);\n  // API wants:\n  // {share_id: int, dirname: top_lvl_dir, dsets: [{'instrument_id': int, 'name': str, 'files': [(path/to/file.raw', ], \n}\n\nasync function scanFolders() {\n  let resp = await getJSON(`/files/external/scan?dirname=${indir}`);\n  dirsfound = resp.dirsfound.map(x => Object.assign({nrraw: x.files.length, dsname: ''}, x));\n  instruments = resp.instruments.map(x => {\n    return {id: x[0], name: x[1]};\n    })\n}\n\nfunction groupDirsToDsets() {\n  // After user inputs names, directories are grouped to datasets if applicable\n  // API wants:\n  // {share_id: int, dirname: top_lvl_dir, dsets: [{'instrument_id': int, 'name': str, 'files': [(path/to/file.raw', ], \n  dsets = {};\n  dirsfound.filter(x => x.dsname !== '').forEach(x => {\n    if (!(x.dsname in dsets)) {\n      dsets[x.dsname] = {\n        name: x.dsname,\n        instrument_id: instruments[0].id,\n        files: [],\n      };\n    }\n    dsets[x.dsname].files = dsets[x.dsname].files.concat(x.files);\n  });\n  view = 'dsets';\n}\n\nfunction handleKeypress(event) {\n  if (event.keyCode === 27) { toggleWindow(); }\n}\n\nonMount(async() => {\n  initUserUpload();\n})\n</script>\n<svelte:window on:keyup={handleKeypress} />\n\n<div class=\"modal is-active\">\n  <div class=\"modal-background\"></div>\n  <div class=\"modal-content\">\n    <div class=\"box\">\n      <h5 class=\"title is-5\">Import external raw files to datasets</h5>\n      <div class=\"field\">\n        <div class=\"control\">\n          Server share name to find data:\n          <div class=\"select\">\n            <select bind:value={shareId}>\n              {#each allshares as {name, id}}\n              <option value={id}>{name}</option>\n              {/each}\n            </select>\n          </div>\n        </div>\n        <div class=\"control\">\n          Directory to import from\n          <input class=\"input\" type=\"text\" placeholder=\"Where you have downloaded the data\" bind:value={indir}>\n        </div>\n      </div>\n      \n      {#if error}\n      <div class=\"has-text-danger\">{error}</div>\n      {/if}\n\n      {#if indir}\n      <a class=\"button is-small\" on:click={scanFolders}>Check directory</a>\n      {:else}\n      <a class=\"button is-small\" disabled>Check directory</a>\n      {/if}\n      {#if dirsfound.length && view === 'rawfiles'}\n      <hr>\n      <h5 class=\"title is-5\">Raw files found in directories\n        {#if !dirsfound.filter(x => x.dsname !== '').length}\n        <a class=\"button is-small\" disabled>Group directories</a>\n        {:else}\n        <a class=\"button is-small\" on:click={groupDirsToDsets}>Group directories</a>\n        {/if}\n      </h5>\n      <table class=\"table\">\n        <thead>\n          <th>Directory</th>\n          <th># of raw files</th>\n          <th><input class=\"checkbox\" type=\"checkbox\" value={dirsaredsets} on:click={evalDirsDsets} > 1 directory per dataset</th>\n        </thead>\n        <tbody>\n          {#each dirsfound as {dsname, dirname, nrraw, dsinstrument}}\n          <tr>\n            <td>{dirname}</td>\n            <td>{nrraw}</td>\n            <td><input class=\"input\" type=\"text\" bind:value={dsname}></td>\n          </tr>\n          {/each}\n        </tbody>\n      </table>\n      {:else if dirsfound.length && view === 'dsets'}\n      <hr>\n      <h5 class=\"title is-5\">Datasets\n        <a class=\"button is-small\" on:click={e => view = 'rawfiles'}>Previous</a>\n        <a class=\"button is-small is-info\" on:click={queueImport}>Import datasets</a>\n      </h5>\n      <table class=\"table\">\n        <thead>\n          <th>Dataset</th>\n          <th># of raw files</th>\n          <th>Instrument</th>\n        </thead>\n        <tbody>\n          {#each Object.values(dsets) as {name, files, instrument_id}}\n          <tr>\n            <td>{name}</td>\n            <td>{files.length}</td>\n            <td>\n              <div class=\"select\">\n                <select bind:value={instrument_id}>\n                  {#each instruments as {id, name}}\n                  <option value={id}>{name}</option>\n                  {/each}\n                </select>\n              </div>\n          </tr>\n          {/each}\n        </tbody>\n      </table>\n      {/if}\n    </div>\n  </div>\n  <button on:click={toggleWindow} class=\"modal-close is-large\" aria-label=\"close\"></button>\n</div>\n","export const flashtime = 5000;\n\n//export function flashError(errors, errormsg) {\n//  errors[errormsg] = 1;\n//  errors = errors;\n//  setTimeout(function() {\n//    errors[errormsg]);\n//    errors = errors;\n//    console.log(errors);\n//  }, 1000);\n//  return errors;\n//}\n//\n\n","<script>\n\nimport { createEventDispatcher } from 'svelte';\nconst dispatch = createEventDispatcher();\nimport { flashtime } from '../../util.js'\n\nexport let value;\nexport let field;\nexport let rowid;\nexport let help = '';\nexport let icon;\nexport let color;\nexport let inactive;\n\nlet confirmReady = false;\n\nfunction setConfirm() {\n  confirmReady = true;\n  setTimeout(() => { confirmReady = false} , flashtime);\n}\n\n</script>\n\n{#if field.type === 'tag'}\n  {#if color}\n  <span class={`tag ${color[value]}`}>{value}</span>\n  {:else}\n  <span class=\"tag is-info\">{value}</span>\n  {/if}\n\n{:else if field.type === 'bool'}\n<span class=\"has-icon\">\n  {#if value}\n  <i class=\"fa fa-check has-text-success\"></i>\n  {:else}\n  -\n  {/if}\n</span>\n\n{:else if field.type === 'icon'}\n<span title={help} class={`icon is-small is-info`}><i class={`fa fa-${icon}`}></i></span>\n\n{:else if field.type === 'state'}\n<span class={`icon is-small ${color[value]}`}><i class=\"fa fa-square\"></i></span>\n\n{:else if field.type === 'button'}\n\n  {#if field.confirm && field.confirm.indexOf(value) > -1 && !confirmReady}\n  <button on:click={setConfirm} class=\"button is-small\">{value}</button>\n  {:else if field.confirm && field.confirm.indexOf(value) > -1}\n  <button on:click={e => dispatch('rowAction', {id: rowid, action: value})} class=\"button is-small is-danger is-light\">{value} - Are you sure?</button>\n  {:else}\n  <button on:click={e => dispatch('rowAction', {id: rowid, action: value})} class=\"button is-small\">{value}</button>\n  {/if}\n\n{:else}\n  {#if inactive}\n  <del>{value}</del>\n  {:else}\n  {value}\n  {/if}\n{/if}\n","<script>\n\nimport {querystring, push} from 'svelte-spa-router';\nimport { onMount, createEventDispatcher } from 'svelte';\nimport { getJSON, postJSON } from '../../datasets/src/funcJSON.js'\n\nimport TableItem from './TableItem.svelte'\nimport { flashtime } from '../../util.js'\n\nexport let items = {};\nexport let fields;\nexport let statecolors;\nexport let fixedbuttons = [];\nexport let selected;\nexport let getdetails;\nexport let inactive = [];\nexport let fetchUrl;\nexport let findUrl;\nexport let notif;\nexport let tab;\n\nexport let treatItems = async function(url, thing, operationmsg, callback, itemids) {\n  if (!itemids) {\n    const itemids = selected;\n  }\n  for (let itemid of itemids) {\n\t  const resp = await postJSON(url, {item_id: itemid});\n    if (!resp.ok) {\n      const msg = `Something went wrong ${operationmsg} ${thing} with id ${itemid}: ${resp.error}`;\n      notif.errors[msg] = 1;\n      setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n    } else {\n      const msg = `${thing} with id ${itemid} queued for ${operationmsg}`;\n      notif.messages[msg] = 1;\n      setTimeout(function(msg) { notif.messages[msg] = 0 } , flashtime, msg);\n      if (callback) {\n        callback(items[itemid]);\n      }\n      items = items; //update items, callback doesnt actually do that since it assigns to variable\n    }\n  }\n}\n\nconst dispatch = createEventDispatcher();\nlet order = [];\nlet findQueryString = '';\nlet showDetailBox = false;\nlet detailsLoaded = false;\nlet detailBoxContent = '';\nlet searchdeleted = false;\nlet loadingItems = false;\nlet loadingNonce;\n\nfunction toggleSelectAll() {\n  selected.length < order.length ? selected = order : selected = [];\n}\n\nfunction fetchItems(ids) {\n\tconst url = ids.length ? fetchUrl + `?ids=${ids.join(',')}` : fetchUrl;\n  loadItems(url);\n}\n\nfunction findItems(q) {\n  const url = `${findUrl}?q=${q}&deleted=${searchdeleted}`;\n  loadItems(url);\n}\n\nfunction findQuery(event) {\n  if (event.keyCode === 13) {\n    // Push doesnt reload the component\n    const q = findQueryString.split(' ').join(',');\n    push(`#/${tab.toLowerCase()}?q=${q}&deleted=${searchdeleted}`);\n    findItems(q);\n  }\n}\n\nasync function showDetails(itemId) {\n  showDetailBox = itemId; \n  detailsLoaded = false;\n  detailBoxContent = await getdetails(itemId);\n  detailsLoaded = true;\n}\n\nfunction clickSingleDetails(rowid) {\n  dispatch('detailview', {ids: [rowid]});\n}\n\nasync function loadItems(url) {\n  loadingItems = true;\n  const localNonce = loadingNonce = new Object();\n  const result = await getJSON(url);\n  loadingItems = false;\n  if ('error' in result) {\n    const msg = `While fetching ${tab.toLowerCase()}: ${result.error}`;\n    notif.errors[msg] = 1;\n    setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n  } else if (localNonce !== loadingNonce) {\n    // Override the previous request so only the latest gets rendered on the page\n    return;\n  } else {\n    order = [];\n    items = {};\n    items = result.items;\n    order = result.order;\n  }\n}\n\nonMount(async() => {\n  let qs;\n  try {\n    qs = Object.fromEntries($querystring.split('&').map(x => x.split('=')));\n  } catch {\n    // Default to just show if querystring is garbage\n    fetchItems([]);\n    return;\n  } \n  if ('ids' in qs) {\n    fetchItems(qs.ids.split(','));\n  } else if ('q' in qs) {\n    searchdeleted = ('deleted' in qs && ['true', 1, 'True'].indexOf(qs.deleted) > -1) ? true : false;\n    findQueryString = qs.q.split(',').join(' ');\n    findItems(qs.q);\n  } else {\n    fetchItems([]);\n  }\n})\n</script>\n\n<style>\n.box {\n  position: absolute;\n}\n\ndiv.spinner {\n  position: absolute;\n  left: 50%;\n  padding-top: 20px;\n}\n</style>\n\n<div class=\"content is-small\">\n  <input type=\"checkbox\" bind:checked={searchdeleted}>Search deleted {tab.toLowerCase()}\n  <input class=\"input is-small\" on:keyup={findQuery} bind:value={findQueryString} type=\"text\" placeholder={`Type a query and press enter to search ${tab.toLowerCase()}`}>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>\n        <input type=\"checkbox\" on:click={toggleSelectAll}>\n      </th>\n      {#each fields as field}\n      <th>\n      {#if field.name.slice(0, 2) === '__'}\n        <span class=\"icon is-small\">\n          <i class={`fa fa-${field.name.slice(2)}`}></i>\n        </span>\n      {:else}\n      {field.name}\n      {/if}\n      </th>\n      {/each}\n    </tr>\n  </thead>\n\n{#if loadingItems}\n<div class=\"has-text-centered spinner\">\n  <i class=\"fa fa-spinner fa-pulse fa-2x\"></i>\n</div>\n{/if}\n\n  <tbody>\n    {#each order.map(x => [x, items[x]]) as [rowid, row]}\n    <tr>\n      <td>\n        <input type=\"checkbox\" bind:group={selected} value={row.id}>\n        <a on:click={e => clickSingleDetails(rowid)} on:mouseenter={e => showDetails(rowid)} on:mouseleave={e => showDetailBox = false}>\n          <span class=\"has-text-info icon is-small\"> <i class=\"fa fa-eye\"></i></span>\n          {#if showDetailBox === rowid}\n          <div class=\"box\" >\n            {#if !detailsLoaded}\n            <i class=\"fa fa-spinner fa-pulse fa-2x\"></i>\n            {:else}\n            {@html detailBoxContent}\n            {/if}\n          </div>\n          {/if}\n        </a>\n        {#each fixedbuttons as button}\n        <a title={button.alt} on:click={e => button.action(row.id)}>\n        <span class=\"icon has-text-info is-small\"><i class={`fa fa-${button.name.slice(2)}`}></i></span>\n        </a>\n        {/each}\n      </td>\n        {#each fields as field}\n        <td>\n          {#if field.links}\n          {#if row[field.links].length || row[field.links] > 0}\n          <a href={`${field.linkroute}?ids=${row[field.links]}`}>\n            {#if field.multi}\n            {#each row[field.id] as item}\n            <TableItem value={item} rowid={rowid} inactive={inactive.some(x=>row[x])} help={field.help} icon={field.icon} field={field} color={statecolors[field.id]} on:rowAction />\n            {/each}\n            {:else} \n            <TableItem value={row[field.id]} rowid={rowid} inactive={inactive.some(x=>row[x])} help={field.help} icon={field.icon} field={field} color={statecolors[field.id]} on:rowAction />\n            {/if}\n          </a>\n          {/if}\n\n          {:else}\n          {#if field.multi}\n          {#each row[field.id] as item}\n          <TableItem value={item} rowid={rowid} inactive={inactive.some(x=>row[x])} help={field.help} icon={field.icon} field={field} color={statecolors[field.id]} on:rowAction />\n          {/each}\n          {:else} \n          <TableItem value={row[field.id]} rowid={rowid} inactive={inactive.some(x=>row[x])} help={field.help} icon={field.icon} field={field} color={statecolors[field.id]} on:rowAction />\n          {/if}\n          {/if}\n\n        </td>\n        {/each}\n    </tr>\n    {/each}\n  </tbody>\n</table>\n</div>\n","<script>\n\nexport let tabshow; \nexport let notif;\n\nlet tabs = ['Datasets', 'Projects', 'Analyses', 'Files', 'Jobs'];\n\n</script>\n\n<style>\n.errormsg {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 20px;\n}\n</style>\n\n{#if Object.values(notif.errors).some(x => x === 1)}\n<div class=\"notification is-danger is-light errormsg\"> \n    {#each Object.entries(notif.errors).filter(x => x[1] == 1).map(x=>x[0]) as error}\n    <div>{error}</div>\n    {/each}\n</div>\n{/if}\n\n{#if Object.values(notif.messages).some(x => x === 1)}\n<div class=\"notification is-success is-light errormsg\"> \n    {#each Object.entries(notif.messages).filter(x => x[1] == 1).map(x=>x[0]) as message}\n    <div>{message}</div>\n    {/each}\n</div>\n{/if}\n\n<div class=\"content\">\n  <div class=\"tabs is-toggle is-centered is-small\">\n    <ul>\n      {#each tabs as tab}\n      <li class={tabshow === tab ? 'is-active' : ''}>\n        <a href={`#/${tab.toLowerCase()}`}><span>{tab}</span></a>\n      </li>\n      {/each}\n    </ul>\n  </div>\n</div>\n","<script>\n\nexport let notif;\nexport let closeWindow;\n\nfunction handleKeypress(event) {\n  if (event.keyCode === 27) { closeWindow(); }\n}\n\n</script>\n\n<style>\n.detailbox {\n  position: absolute;\n  top: 40px;\n  width: 100%;\n  height: 100%;\n  z-index: 40; \n  pointer-events: none;\n}\n\n.modalbox {\n  position: -webkit-sticky;\n  position: sticky;\n  padding: 100px;\n  top: 0px;\n  pointer-events: all;\n}\n\n.closebutton {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n}\n\n.notification {\n  position: sticky;\n  top: 20px;\n  left: 20px;\n  z-index: 50;\n}\n</style>\n\n<svelte:window on:keyup={handleKeypress} />\n\n<div class=\"detailbox\">\n  <div class=\"box modalbox\">\n\n    {#if Object.values(notif.errors).some(x => x === 1)}\n    <div class=\"notification is-danger is-light errormsg\"> \n        {#each Object.entries(notif.errors).filter(x => x[1] == 1).map(x=>x[0]) as error}\n        <div>{error}</div>\n        {/each}\n    </div>\n    {/if}\n    {#if Object.values(notif.messages).some(x => x === 1)}\n    <div class=\"notification is-success is-light errormsg\"> \n        {#each Object.entries(notif.messages).filter(x => x[1] == 1).map(x=>x[0]) as message}\n        <div>{message}</div>\n        {/each}\n    </div>\n    {/if}\n  \n    <slot></slot>\n    <button on:click={closeWindow()} class=\"button closebutton\" aria-label=\"close\"><span class=\"icon\"><i class=\"fa fa-times\"></i></span></button>\n  </div>\n</div>\n","<script>\nimport { onMount } from 'svelte';\nimport { getJSON, postJSON } from '../../datasets/src/funcJSON.js'\nimport { flashtime } from '../../util.js'\nimport DetailBox from './DetailBox.svelte'\n\nexport let closeWindow;\nexport let dsetIds;\n\nlet notif = {errors: {}, messages: {}};\nlet dsets = {};\nlet owner_to_add = Object.fromEntries(dsetIds.map(x => [x, false]));\nlet replace_pwiz_id = Object.fromEntries(dsetIds.map(x => [x, false]));\nlet refine_v_touse = Object.fromEntries(dsetIds.map(x => [x, false]));\nlet pwstateColors = {\n  Ready: 'is-success',\n  Incomplete: 'is-warning',\n  Processing: 'is-danger is-light',\n}\n\n// If user clicks new dataset, show that instead, run when dsetIds is updated:\n$: {\n  cleanFetchDetails(dsetIds);\n}\n\nfunction new_owners(allowners, oldowners) {\n  const difference = Object.keys(allowners).concat(Object.keys(oldowners)).reduce(function(r, cur) {\n    if (!r.delete(cur)) {\n      r.add(cur);\n    } return r}, new Set());\n  return Array.from(difference);\n}\n\nasync function convertDset(dsid, pwiz_id) {\n  const resp = await postJSON('createmzml/', {dsid: dsid, pwiz_id: pwiz_id});\n  if (!resp.ok) {\n    const msg = `Something went wrong trying to queue dataset mzML conversion: ${resp.error}`;\n    notif.errors[msg] = 1;\n    setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n  } else {\n    cleanFetchDetails(dsetIds);\n    const msg = 'Queued dataset for mzML conversion';\n    notif.messages[msg] = 1;\n    setTimeout(function(msg) { notif.messages[msg] = 0 } , flashtime, msg);\n  }\n}\n\nasync function refineDset(dsid, refine_id) {\n  const resp = await postJSON('refinemzml/', {dsid: dsid, refine_id: refine_id});\n  if (!resp.ok) {\n    const msg = `Something went wrong trying to queue precursor refining: ${resp.error}`;\n    notif.errors[msg] = 1;\n    setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n  } else {\n    cleanFetchDetails(dsetIds);\n    const msg = 'Queued dataset for mzML precursor refining';\n    notif.messages[msg] = 1;\n    setTimeout(function(msg) { notif.messages[msg] = 0 } , flashtime, msg);\n  }\n}\n\nasync function changeOwner(dsid, owner, op) {\n  const resp = await postJSON('datasets/save/owner/', {\n    'dataset_id': dsid, \n    'op': op,\n    'owner': owner});\n  if (!resp.ok) {\n    const msg = `Something went wrong trying to change owner of the dataset: ${resp.error}`;\n    notif.errors[msg] = 1;\n    setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n  } else {\n    fetchDetails([dsid]);\n  }\n  owner_to_add[dsid] = false;\n}\n\nasync function fetchDetails(dsetids) {\n  let fetchedDsets = {}\n  const tasks = dsetids.map(async dsetId => {\n    const resp = await getJSON(`/show/dataset/${dsetId}`);\n    if (!resp.ok) {\n      const msg = `Something went wrong fetching dataset info: ${resp.error}`;\n      notif.errors[msg] = 1;\n      setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n    } else {\n      fetchedDsets[dsetId] = resp;\n    }\n  });\n  const result = await Promise.all(tasks);\n  dsets = Object.assign(dsets, fetchedDsets);\n}\n\nfunction cleanFetchDetails(dsetids) {\n  dsets = {};\n  fetchDetails(dsetids);\n}\n\nonMount(async() => {\n  cleanFetchDetails(dsetIds);\n});\n\n</script>\n\n<DetailBox notif={notif} closeWindow={closeWindow}>\n  {#each Object.entries(dsets) as [dsid, dset]}\n  <p><span class=\"has-text-weight-bold\">Storage location:</span> {dset.storage_loc}</p>\n  <hr>\n  <div class=\"columns\">\n    <div class=\"column\">\n\n      <div class=\"field\">\n        {#each Object.entries(dset.nrstoredfiles) as fn}\n        <div>{fn[1]} stored files of type {fn[0]}</div>\n        {/each}\n      </div>\n\n    </div>\n\n    <div class=\"column\">\n\n      <div class=\"has-text-weight-bold\">Owners</div>\n      <div class=\"field is-grouped is-grouped-multiline\">\n        {#each Object.entries(dset.owners) as [usrid, owner]}\n        <div class=\"control\">\n          <div class=\"tags has-addons\">\n            <span class=\"tag is-light\">{owner}</span>\n            <a class=\"tag is-info is-delete\" on:click={e => changeOwner(dsid, usrid, 'del')}></a>\n          </div>\n        </div>\n        {/each}\n      </div>\n      <div class=\"field\">\n        <div class=\"control\">\n          <div class=\"select\">\n            <select bind:value={owner_to_add[dsid]} on:change={e => changeOwner(dsid, owner_to_add[dsid], 'add')}>\n              <option disabled value={false}>Add an owner</option>\n              {#each new_owners(dset.allowners, dset.owners) as newusrid}\n              <option value={newusrid}>{dset.allowners[newusrid]}</option>\n              {/each}\n            </select>\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"column\">\n\n      {#if dset.qtype}\n      <div><span class=\"has-text-weight-bold\">Quant type</span> {dset.qtype.name}</div>\n      {/if}\n\n      <div class=\"has-text-weight-bold\">Instrument(s)</div>\n      <div class=\"field is-grouped is-grouped-multiline\">\n        {#each dset.instruments as instr}\n        <div class=\"control\">\n          <div class=\"tags\">\n            <span class=\"tag is-light\">{instr}</span>\n          </div>\n        </div>\n        {/each}\n      </div>\n\n    </div>\n  </div>\n\n  {#if 'pwiz_versions' in dset}\n  <div class=\"field\">\n    <label class=\"label\">Conversion mzML results / pipeline version(s)</label>\n    <table class=\"table\">\n      <tbody>\n        {#each dset.pwiz_sets as pw}\n        <tr>\n          <td>\n            {#if (pw.state === 'Incomplete' && pw.refined)}\n            <button class=\"button is-small\" on:click={e => refineDset(dsid, pw.id)}>Re-refine</button>\n            {:else if pw.state === 'Incomplete' || pw.state === 'No mzmls'}\n            <button class=\"button is-small\" on:click={e => convertDset(dsid, pw.id)}>Re-convert</button>\n            {:else if pw.refineready}\n            <div class=\"select is-small\">\n              <select bind:value={refine_v_touse[dset.id]}>\n                <option value=\"\">Pick a refine version</option>\n                {#each dset.refine_versions as {id, name}}\n                <option value={id}>Refine {name}</option>\n                {/each}\n              </select>\n            </div>\n            <button class=\"button is-small\" on:click={e => refineDset(dsid, refine_v_touse[dset.id])}>Refine mzML</button>\n            {/if}\n          </td>\n          <td>\n            <span class={`tag ${pwstateColors[pw.state]}`}>\n              {pw.state}\n            </span>\n          </td>\n          <td>\n            <span class=\"has-text-weight-bold\">{pw.version}</span>\n            <span>, created {pw.created}</span>\n            {#if pw.state === 'Incomplete'}\n            <span>, {pw.existing} files</span>\n            {/if}\n          </td>\n\n          <td>\n            {#if pw.refined}\n            <span class=\"tag is-light is-warning\">Refined</span>\n            {/if}\n          </td>\n        </tr>\n        {/each}\n      </tbody>\n    </table>\n  </div>\n    \n  <div class=\"field\">\n    {#if Object.keys(dset.pwiz_versions).length}\n    <div>Or replace with mzMLs of another version</div>\n    <div class=\"select\">\n      <select bind:value={replace_pwiz_id[dset.id]}>\n        <option value=\"\">Pick a proteowizard version</option>\n        {#each Object.entries(dset.pwiz_versions) as pwiz_v}\n        <option value={pwiz_v[0]}>{pwiz_v[1]}</option>\n        {/each}\n      </select>\n    </div>\n    {#if replace_pwiz_id[dset.id]}\n    <button on:click={e => convertDset(dsid, replace_pwiz_id[dset.id])} class=\"button\">Convert!</button>\n    {:else}\n    <button disabled class=\"button\">Convert!</button>\n    {/if}\n    {/if}\n  </div>\n  {/if}\n\n  {/each}\n</DetailBox>\n","<script>\n\nimport {querystring, push} from 'svelte-spa-router';\nimport { getJSON } from '../../datasets/src/funcJSON.js'\nimport ImportExternal from './ImportExternal.svelte'\nimport Table from './Table.svelte'\nimport Tabs from './Tabs.svelte'\nimport Details from './DatasetDetails.svelte'\nimport { flashtime } from '../../util.js'\n\nconst inactive = ['deleted'];\nlet importVisible = false;\nlet selectedDsets = []\nlet notif = {errors: {}, messages: {}};\nlet detailsVisible = false;\nlet treatItems;\nlet purgeConfirm = false;\n\nconst tablefields = [\n  {id: 'ptype', name: 'Project type', type: 'str', multi: false},\n  {id: 'storestate', name: 'Stored', type: 'tag', multi: false, links: 'fn_ids', linkroute: '#/files/'},\n  {id: 'jobstates', name: '__hourglass-half', type: 'state', multi: true, links: 'jobids', linkroute: '#/jobs'},\n  {id: 'analyses', name: '', type: 'icon', icon: 'cogs', links: 'ana_ids', linkroute: '#/analyses'},\n  {id: 'proj', name: 'Project', type: 'str', multi: false},\n  {id: 'exp', name: 'Experiment', type: 'str', multi: false},\n  {id: 'run', name: 'Run', type: 'str', multi: false},\n  {id: 'usr', name: 'Creator', type: 'str', multi: false},\n  {id: 'dtype', name: 'Datatype', type: 'str', multi: false},\n];\n\nconst statecolors = {\n  storestate: {\n    cold: 'is-info',\n    purged: 'is-danger', \n    complete: 'is-success', \n    'active-only': 'is-warning', \n    new: 'is-warning', \n    empty: 'is-light',\n    broken: 'is-light',\n  },\n  jobstates: {\n    wait: 'has-text-grey-light',\n    pending: 'has-text-info',\n    error: 'has-text-danger', \n    processing: 'has-text-warning', \n    done: 'has-text-success',\n  },\n}\n\nconst fixedbuttons = [\n  {name: '__edit', alt: 'Show metadata', action: showMeta},\n]\n\nfunction showMeta(dsid) {\n  window.open(`/datasets/show/${dsid}`, '_blank');\n} \n\nfunction showDetails(event) {\n  detailsVisible = event.detail.ids;\n}\n\n\nasync function getDsetDetails(dsetId) {\n\tconst resp = await getJSON(`/show/dataset/${dsetId}`);\n  return `\n    <p><span class=\"has-text-weight-bold\">Storage location:</span> ${resp.storage_loc}</p>\n    <p><span class=\"has-text-weight-bold\">Owners:</span> ${Object.values(resp.owners).join(', ')}</p>\n    <hr>\n    <p>\n    ${Object.entries(resp.nrstoredfiles).map(x => {return `<div>${x[1]} stored files of type ${x[0]}</div>`;}).join('')}\n    </p>\n    `;\n}\n\nasync function analyzeDatasets() {\n  window.open(`/analysis/new?dsids=${selectedDsets.join(',')}`, '_blank');\n}\n\nfunction archiveDataset() {\n  const callback = (dset) => {dset.deleted = true; }\n  treatItems('datasets/archive/dataset/', 'dataset', 'archiving', callback, selectedDsets);\n}\n\nfunction reactivateDataset() {\n  const callback = (dset) => {dset.deleted = false; }\n  treatItems('datasets/undelete/dataset/', 'dataset','reactivating', callback, selectedDsets);\n}\n\nfunction purgeDatasets() {\n  const callback = (dset) => {dset.deleted = true; }\n  treatItems('datasets/purge/dataset/', 'dataset', 'reactivating', callback, selectedDsets);\n}\n\nfunction setConfirm() {\n  purgeConfirm = true;\n  setTimeout(() => { purgeConfirm = false} , flashtime);\n}\n\n</script>\n\n<Tabs tabshow=\"Datasets\" notif={notif} />\n\n{#if selectedDsets.length}\n<a class=\"button\" title=\"Search MS data\" on:click={analyzeDatasets}>Analyze datasets</a>\n<a class=\"button\" title=\"Move datasets to cold storage (delete)\" on:click={archiveDataset}>Retire datasets</a>\n<a class=\"button\" title=\"Move datasets to active storage (undelete)\" on:click={reactivateDataset}>Reactivate datasets</a>\n  {#if purgeConfirm}\n  <a class=\"button is-danger is-light\" title=\"PERMANENTLY delete datasets from active and cold storage\" on:click={purgeDatasets}>Are you sure? Purge datasets</a>\n  {:else}\n  <a class=\"button\" title=\"PERMANENTLY delete datasets from active and cold storage\" on:click={setConfirm}>Purge datasets</a>\n  {/if}\n{:else}\n<a class=\"button\" title=\"Search MS data\" disabled>Analyze datasets</a>\n<a class=\"button\" title=\"Move datasets to cold storage (delete)\" disabled>Retire datasets</a>\n<a class=\"button\" title=\"Move datasets to active storage (undelete)\" disabled>Reactivate datasets</a>\n<a class=\"button\" title=\"PERMANENTLY delete datasets from active and cold storage\" disabled>Purge datasets</a>\n{/if}\n{#if is_staff}\n<a class=\"button\" title=\"Already downloaded files on tmp inbox\" on:click={e => importVisible = importVisible === false}>Import external data</a>\n{/if}\n\n\n<Table tab=\"Datasets\" bind:treatItems={treatItems} bind:notif={notif} bind:selected={selectedDsets} fetchUrl=\"/show/datasets\" findUrl=\"/find/datasets\" getdetails={getDsetDetails} fixedbuttons={fixedbuttons} fields={tablefields} inactive={inactive} statecolors={statecolors} on:detailview={showDetails} />\n\n{#if importVisible}\n<ImportExternal toggleWindow={e => importVisible = importVisible === false} />\n{/if}\n\n{#if detailsVisible}\n<Details closeWindow={() => {detailsVisible = false}} dsetIds={detailsVisible} />\n{/if}\n","<script>\n\nimport {querystring} from 'svelte-spa-router';\nimport { getJSON } from '../../datasets/src/funcJSON.js'\nimport { flashtime } from '../../util.js'\nimport Table from './Table.svelte'\nimport Tabs from './Tabs.svelte'\n\nlet selectedjobs = [];\nlet notif = {errors: {}, messages: {}};\nlet treatItems;\nlet jobs;\n\nconst tablefields = [\n  {id: 'state', name: '__hourglass-half', type: 'state', multi: false},\n  {id: 'name', name: 'Job name', type: 'str', multi: false},\n  {id: 'files', name: '', help: 'Files', type: 'icon', icon: 'database', multi: false, links: 'fn_ids', linkroute: '#/files'},\n  {id: 'analysis', name: '', help: 'Analysis', type: 'icon', icon: 'cogs', multi: false, links: 'analysis', linkroute: '#/analyses'},\n  {id: 'datasets', name: '', help: 'Datasets', type: 'icon', icon: 'clipboard-list', multi: false, links: 'dset_ids', linkroute: '#/datasets'},\n  {id: 'usr', name: 'Users', type: 'str', multi: false},\n  {id: 'date', name: 'Date', type: 'str', multi: false},\n  {id: 'actions', name: 'Actions', type: 'button', multi: true, confirm: ['delete']},\n];\n\nconst statecolors = {\n  state: {\n    wait: 'has-text-grey-light',\n    pending: 'has-text-info',\n    error: 'has-text-danger', \n    processing: 'has-text-warning', \n    done: 'has-text-success',\n  },\n}\n\nconst fixedbuttons = [\n  {name: '__redo', alt: 'Refresh job', action: refreshJob},\n]\n\n\nfunction retryJob(jobid) {\n  const callback = (job) => {refreshJob(job.id)};\n  treatItems('/jobs/retry/', 'job', 'retrying', callback, [jobid]);\n}\n\nfunction pauseJob(jobid) {\n  const callback = (job) => {refreshJob(job.id)};\n  treatItems('/jobs/pause/', 'job', 'pausing', callback, [jobid]);\n}\n\nfunction deleteJob(jobid) {\n  const callback = (job) => {refreshJob(job.id)};\n  treatItems('/jobs/delete/', 'job', 'deleting', callback, [jobid]);\n}\n\nfunction jobAction(action, jobid) {\n  const actionmap = {\n    retry: retryJob,\n    'force retry': retryJob,\n    pause: pauseJob,\n    delete: deleteJob,\n  }\n  actionmap[action](jobid);\n}\n\nasync function refreshJob(jobid) {\n  const resp = await getJSON(`/refresh/job/${jobid}`);\n  if (!resp.ok) {\n    const msg = `Something went wrong trying to refresh job ${jobid}: ${resp.error}`;\n    notif.errors[msg] = 1;\n     setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n   } else {\n     jobs[jobid] = Object.assign(jobs[jobid], resp);\n   }\n}\n\nasync function getJobDetails(jobId) {\n       const resp = await getJSON(`/show/job/${jobId}`);\n  return `\n    <p>${resp.files} files in job</p>\n    ${resp.errmsg ? `<p>Error msg: ${resp.errmsg}</p>` : ''}\n    <p>\n    <span class=\"tag is-danger\">${resp.tasks.error}</span>\n    <span class=\"tag is-warning\">${resp.tasks.procpen}</span>\n    <span class=\"tag is-success\">${resp.tasks.done}</span>\n    </p>\n  `;\n}\n</script>\n\n<Tabs tabshow=\"Jobs\" notif={notif} />\n\n<Table tab=\"Jobs\" bind:items={jobs} bind:treatItems={treatItems} bind:notif={notif} bind:selected={selectedjobs} fetchUrl=\"/show/jobs\" findUrl=\"find/jobs\" getdetails={getJobDetails} fixedbuttons={fixedbuttons} fields={tablefields} inactive={['canceled']} statecolors={statecolors} on:rowAction={e => jobAction(e.detail.action, e.detail.id)} />\n","<script>\nimport { onMount } from 'svelte';\nimport { getJSON, postJSON } from '../../datasets/src/funcJSON.js'\nimport { flashtime } from '../../util.js'\nimport DetailBox from './DetailBox.svelte'\n\nexport let closeWindow;\nexport let fnIds;\n\nlet notif = {errors: {}, messages: {}};\nlet items = {};\nlet newname = Object.fromEntries(fnIds.map(x => [x, false]));\n\n// If user clicks new file, show that instead, run when dsetIds is updated:\n$: {\n  cleanFetchDetails(fnIds);\n}\n\nasync function renameFile(newname, fnid) {\n  console.log(items[fnid].filename);\n  console.log(newname);\n  if (newname !== items[fnid].filename) {\n    const resp = await postJSON('/files/rename/', {\n      newname: newname,\n      sf_id: fnid});\n    if (!resp.ok) {\n      const msg = `Something went wrong trying to rename the file: ${resp.error}`;\n      notif.errors[msg] = 1;\n      setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n    } else {\n      items[fnid].filename = newname;\n      const msg = `Queued file for renaming to ${newname}`;\n      notif.messages[msg] = 1;\n      setTimeout(function(msg) { notif.messages[msg] = 0 } , flashtime, msg);\n    }\n  }\n}\n\n// This function seems general, but I'm not sure, you could put file specific stuff in it\n// maybe with a callback\nasync function fetchDetails(ids) {\n  let fetched = {}\n  const tasks = ids.map(async singleId => {\n    const resp = await getJSON(`/show/file/${singleId}`);\n    if (!resp.ok) {\n      const msg = `Something went wrong fetching file info: ${resp.error}`;\n      notif.errors[msg] = 1;\n      setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n    } else {\n      fetched[singleId] = resp;\n      newname[singleId] = resp.filename;\n    }\n  });\n  const result = await Promise.all(tasks);\n  items = Object.assign(items, fetched);\n}\n\nfunction cleanFetchDetails(ids) {\n  items = {};\n  fetchDetails(ids);\n}\n\nonMount(async() => {\n  cleanFetchDetails(fnIds);\n});\n\n</script>\n\n<DetailBox notif={notif} closeWindow={closeWindow}>\n  {#each Object.entries(items) as [fnid, fn]}\n  <p><span class=\"has-text-weight-bold\">Producer</span> {fn.producer}</p>\n  <p><span class=\"has-text-weight-bold\">Storage location:</span> <span class=\"has-text-primary\">{fn.server}</span> / {fn.path}</p>\n  {#if fn.description}\n  <p><span class=\"has-text-weight-bold\">Description:</span>{fn.description}</p>\n  {/if}\n  <div class=\"field is-grouped\">\n    <p class=\"control is-expanded\">\n      <input class=\"input is-small\" bind:value={newname[fnid]} type=\"text\"> \n    </p>\n    <p class=\"control\">\n      <a on:click={renameFile(newname[fnid], fnid)} class=\"button is-small is-primary\">Rename file</a>\n    </p>\n  </div>\n  {/each}\n</DetailBox>\n","<script>\n\nimport {querystring, push} from 'svelte-spa-router'\nimport { getJSON, postJSON } from '../../datasets/src/funcJSON.js'\nimport Table from './Table.svelte'\nimport Tabs from './Tabs.svelte'\nimport Details from './FileDetails.svelte'\nimport { flashtime } from '../../util.js'\n\nlet selectedFiles = []\nlet notif = {errors: {}, messages: {}};\nlet detailsVisible = false;\nlet cleanupsize = false;\nlet fetchingCleanup = false;\n\nconst tablefields = [\n  {id: 'jobs', name: '__hourglass-half', type: 'state', multi: true, links: 'job_ids', linkroute: '#/jobs'},\n  {id: 'name', name: 'File', type: 'str', multi: false},\n  {id: 'dataset', name: '', type: 'icon', help: 'Dataset', icon: 'clipboard-list', multi: false, links: 'dataset', linkroute: '#/datasets'},\n  {id: 'analyses', name: '', type: 'icon', help: 'Analyses', icon: 'cogs', multi: false, links: 'analyses', linkroute: '#/analyses'},\n  {id: 'date', name: 'Date', type: 'str', multi: false},\n  {id: 'size', name: 'Size', type: 'str', multi: false},\n  {id: 'backup', name: 'Backed up', type: 'bool', multi: false},\n  {id: 'owner', name: 'Belongs', type: 'str', multi: false},\n  {id: 'ftype', name: 'Type', type: 'str', multi: false},\n];\n\nconst statecolors = {\n  stored: false,\n  jobs: {\n    wait: 'has-text-grey-light',\n    pending: 'has-text-info',\n    error: 'has-text-danger', \n    processing: 'has-text-warning', \n    done: 'has-text-success',\n  },\n}\n\nfunction showDetails(event) {\n  detailsVisible = event.detail.ids;\n}\n\nasync function getFileDetails(fnId) {\n\tconst resp = await getJSON(`/show/file/${fnId}`);\n  return `\n    <p><span class=\"has-text-weight-bold\">Producer:</span> ${resp.producer}</p>\n    <p><span class=\"has-text-weight-bold\">Storage location:</span> <span class=\"has-text-primary\">${resp.server}</span> / ${resp.path}</p>\n    ${resp.description ? `<p><span class=\"has-text-weight-bold\">Description:</span> ${resp.description}</p>` : ''}\n    `;\n}\n\n\nasync function runCleanup() {\n  fetchingCleanup = true;\n  cleanupsize = false;\n  let msg;\n  const resp = await postJSON('files/cleanup/', {queue_job: true} );\n  if (!resp.ok) {\n    if ('error' in resp) {\n      msg = resp.error;\n    } else {\n      msg = 'Something went wrong trying to run mzML clean-up';\n    }\n    notif.errors[msg] = 1;\n    setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n  } else {\n    fetchingCleanup = false;\n    msg = 'Queued job to delete old mzML from disk';\n    notif.messages[msg] = 1;\n    setTimeout(function(msg) { notif.messages[msg] = 0 } , flashtime, msg);\n  }\n}\n\n\nasync function fetchCleanup() {\n  fetchingCleanup = true;\n  let msg;\n  const resp = await postJSON('files/cleanup/', {queue_job: false} );\n  if (!resp.ok) {\n    if ('error' in resp) {\n      msg = resp.error;\n    } else {\n      msg = 'Something went wrong trying to fetch mzML clean-up size';\n    }\n    notif.errors[msg] = 1;\n    setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n  } else {\n    cleanupsize = resp.mzml_cleanupsize_raws;\n    setTimeout(function() {cleanupsize = false } , 300000);\n  }\n  fetchingCleanup = false;\n}\n\n</script>\n\n<Tabs tabshow=\"Files\" notif={notif} />\n{#if cleanupsize}\n<a class=\"button\" on:click={runCleanup}>Cleanup mzML for {cleanupsize} of raw files</a>\n{:else if fetchingCleanup}\n<a class=\"button is-loading\">Cleanup mzML for {cleanupsize} of raw files</a>\n{:else}\n<a class=\"button\" on:click={fetchCleanup}>Get old mzML cleanup space</a>\n{/if}\n\n{#if selectedFiles.length}\n<!-- buttons -->\n{/if}\n  \n<Table tab=\"Files\" bind:notif={notif} bind:selected={selectedFiles} fetchUrl=\"/show/files\" findUrl=\"/find/files\" getdetails={getFileDetails} fields={tablefields} inactive={['deleted', 'purged']} statecolors={statecolors} on:detailview={showDetails} />\n\n{#if detailsVisible}\n<Details closeWindow={() => {detailsVisible = false}} fnIds={detailsVisible} />\n{/if}\n","<script>\n\nimport { onMount } from 'svelte';\nimport { getJSON } from '../../datasets/src/funcJSON.js'\n\nexport let toggleWindow;\n\nlet uploaddesc = '';\nlet upload_ftypeid;\nlet uploadError;\nlet uploadSuccess;\nlet uploadRunning;\nlet selectedFile = [];\nlet ftypes = {};\nlet waiting = false;\n\nasync function getUploadableFiletypes() {\n  const resp = await getJSON('/files/upload/userfile');\n  ftypes = resp.upload_ftypes;\n}\n\nasync function uploadFile() {\n  waiting = true;\n  uploadRunning = true;\n  uploadError = uploadSuccess = false;\n  let fdata = new FormData();\n  fdata.append('file', selectedFile[0]);\n  fdata.append('desc', uploaddesc);\n  fdata.append('ftype_id', upload_ftypeid);\n  let resp = await fetch('/files/upload/userfile/', {\n    method: 'POST',\n    body: fdata,\n    credentials: 'same-origin',\n  })\n  if (!resp.ok) {\n    uploadError = 'Something went wrong trying to send file to server, contact admin';\n    return;\n  } else {\n    resp = await resp.json();\n  }\n  if ('error' in resp) {\n    uploadRunning = uploadSuccess = false;\n    uploadError = resp.error;\n  } else {\n    uploadSuccess = resp.success;\n  }\n  waiting = false;\n}\n\nfunction handleKeypress(event) {\n  if (event.keyCode === 27) { toggleWindow(); }\n}\n\nonMount(async() => {\n  getUploadableFiletypes()\n});\n</script>\n\n<svelte:window on:keyup={handleKeypress} />\n\n<div class=\"modal is-active\">\n  <div class=\"modal-background\"></div>\n  <div class=\"modal-content\">\n    <div class=\"box\">\n      <h5 class=\"title is-5\">Upload FASTA files</h5>\n      <div class=\"field\">\n        <div class=\"file has-name is-fullwidth\">\n          <label class=\"file-label\">\n            {#if waiting}\n            <input files={selectedFile} class=\"file-input\" disabled type=\"file\" > \n            {:else}\n            <input bind:files={selectedFile} class=\"file-input\" type=\"file\" > \n            {/if}\n            <span class=\"file-cta\">\n              <span class=\"file-icon\">\n                <i class=\"fas fa-upload\"></i>\n              </span>\n              {#if waiting}\n              <span class=\"file-label\">Uploading file...</span>\n              {:else}\n              <span class=\"file-label\">Choose a file...</span>\n              {/if}\n            </span>\n            <span class=\"file-name\">\n              {#if uploadSuccess}\n              <span class=\"has-icon\"><i class=\"fa fa-check has-text-success\"></i></span>\n              {:else if uploadError}\n              <span class=\"has-icon\"><i class=\"fa fa-times has-text-danger\"></i></span>\n              {:else if uploadRunning}\n              <span class=\"has-icon\"><i class=\"fa fa-spinner fa-spin\"></i></span>\n              {/if}\n              {#if selectedFile.length}\n              {selectedFile[0].name}\n              {/if}\n            </span>\n          </label>\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <div class=\"control\">\n          <div class=\"select\">\n            {#if waiting}\n            <select disabled value={upload_ftypeid}>\n              <option>Select filetype</option>\n              {#each Object.keys(ftypes) as ftid}\n              <option value={ftid}>{ftypes[ftid]}</option>\n              {/each}\n            </select>\n            {:else}\n            <select bind:value={upload_ftypeid}>\n              <option>Select filetype</option>\n              {#each Object.keys(ftypes) as ftid}\n              <option value={ftid}>{ftypes[ftid]}</option>\n              {/each}\n            </select>\n            {/if}\n          </div>\n        </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"control\">\n          {#if waiting}\n          <input class=\"input\" disabled value={uploaddesc} type=\"text\" placeholder=\"Description\">\n          {:else}\n          <input class=\"input\" bind:value={uploaddesc} type=\"text\" placeholder=\"Description\">\n          {/if}\n        </div>\n      </div>\n      \n      {#if uploadError}\n      <div class=\"has-text-danger\">{uploadError}</div>\n      {/if}\n      {#if selectedFile.length && uploaddesc && upload_ftypeid}\n      <a class=\"button is-small\" on:click={uploadFile}>Upload file</a>\n      {:else if waiting}\n      <a class=\"button is-small\" disabled>Upload file</a>\n      {:else}\n      <a class=\"button is-small\" disabled>Upload file</a>\n      {/if}\n    </div>\n  </div>\n  <button on:click={toggleWindow} class=\"modal-close is-large\" aria-label=\"close\"></button>\n</div>\n","<script>\nimport { onMount } from 'svelte';\nimport { getJSON, postJSON } from '../../datasets/src/funcJSON.js'\nimport { flashtime } from '../../util.js'\nimport DetailBox from './DetailBox.svelte'\n\nexport let closeWindow;\nexport let anaIds;\n\nlet notif = {errors: {}, messages: {}};\nlet analyses = {};\n\n// If user clicks new dataset, show that instead, run when dsetIds is updated:\n$: {\n  cleanFetchDetails(anaIds);\n}\n\n\nasync function fetchDetails(anaids) {\n  let fetchedAna = {}\n  const tasks = anaids.map(async anaId => {\n    const resp = await getJSON(`/show/analysis/${anaId}`);\n    if (!resp.ok) {\n      const msg = `Something went wrong fetching analysis info: ${resp.error}`;\n      notif.errors[msg] = 1;\n      setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n    } else {\n      fetchedAna[anaId] = resp;\n    }\n  });\n  const result = await Promise.all(tasks);\n  analyses = Object.assign(analyses, fetchedAna);\n}\n\nfunction cleanFetchDetails(anaids) {\n  analyses = {};\n  fetchDetails(anaids);\n}\n\nonMount(async() => {\n  cleanFetchDetails(anaIds);\n});\n\n</script>\n\n<DetailBox notif={notif} closeWindow={closeWindow}>\n  {#each Object.entries(analyses) as [anaid, analysis]}\n    <h4 class=\"title is-4\">{analysis.name}</h4>\n    {#if analysis.base_analysis.nfsid}\n    <p><span class=\"has-text-weight-bold\">Complementing previous run:</span> <a href={`#/analyses?ids=${analysis.base_analysis.nfsid}`}>{analysis.base_analysis.name}</a></p>\n    {/if}\n    <p><span class=\"has-text-weight-bold\">Workflow version:</span> {analysis.wf.name} - {analysis.wf.update}</p>\n    <p>\n      <span class=\"has-text-weight-bold\">Input data:</span> \n      {analysis.nrfiles} raw files from {analysis.nrdsets} dataset(s) analysed\n      {#if analysis.base_analysis.nfsid}\n      ({analysis.base_analysis.nrdsets} datasets, {analysis.base_analysis.nrfiles} files cumulatively analysed in previous run)\n      {/if}\n    </p>\n    <p><span class=\"has-text-weight-bold\">Quant type:</span> {analysis.quants.join(', ')}</p>\n    <p><span class=\"has-text-weight-bold\">Last lines of log  \n      {#if analysis.log[0].slice(0, 16) !== 'Analysis without'}\n      <a href={`analysis/log/${anaid}`} class=\"is-size-7\" target=\"_blank\">(full log)</a>\n      {/if}\n      :</span>\n    </p>\n    <p class=\"is-size-7 is-family-monospace\">\n    {#each analysis.log as logline}\n    {logline}<br>\n    {/each}\n    </p>\n\n\n    <div class=\"content\">\n    <p class=\"has-text-weight-bold\">Output</p>\n    {#each analysis.storage_locs as {server, path, share}}\n    <div class=\"tags has-addons\">\n      <span class=\"tag\">{server}</span>\n      <span class=\"tag is-primary\">{share} </span>\n      &nbsp;{path}\n    </div>\n    {/each}\n    {#each analysis.servedfiles as linkname}\n    <div><a href=\"analysis/showfile/{linkname[0]}\" target=\"_blank\">{linkname[1]}</a></div>\n    {/each}\n    </div>\n\n    <div class=\"content\">\n      <p class=\"has-text-weight-bold\">Input files</p>\n      {#each analysis.invocation.files as {param, fn, fnid, desc, parentanalysis, anid}}\n        {#if parentanalysis}\n        <p><code>{param}</code> from <a target=\"_blank\" href={`#/analyses?ids=${anid}`}>{parentanalysis}</a> ( <a href={`#/files?ids=${fnid}`}>{fn}</a> )</p>\n        {:else}\n        <p><code>{param}</code> {desc} ( <a href={`#/files?ids=${fnid}`}>{fn}</a> )</p>\n        {/if}\n      {/each}\n      {#each analysis.invocation.multifiles as multif}\n      <div>\n        <code>{multif[0]}</code> \n        {#each multif[1] as {fn, fnid, desc, parentanalysis, anid}}\n        <div>{desc} ( <a href={`#/files?ids=${fnid}`}>{fn}</a> )</div>\n        {/each}\n      </div>\n      {/each}\n    </div>\n\n    <div class=\"content\">\n      <h6 class=\"title is-6\">Other parameters</h6>\n      <code>{analysis.invocation.params.join(' ')}</code>\n    </div>\n\n    <div class=\"content\">\n      <h6 class=\"title is-6\">Samples:</h6> \n      {#if analysis.invocation.sampletable}\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>Channel</th>\n            <th>Sample set</th>\n            <th>Sample name</th>\n            <th>Sample group</th>\n          </tr>\n        </thead>\n        <tbody>\n          {#each analysis.invocation.sampletable as sample}\n          <tr>\n            {#each sample as txt}\n            <td>{txt}</td>\n            {/each}\n          </tr>\n          {/each}\n        </tbody>\n      </table>\n      {/if}\n    </div>\n\n  {/each}\n</DetailBox>\n","<script>\n\nimport {querystring, push} from 'svelte-spa-router';\nimport { getJSON } from '../../datasets/src/funcJSON.js'\nimport Table from './Table.svelte'\nimport Tabs from './Tabs.svelte'\nimport Upload from './Upload.svelte'\nimport Details from './AnalysisDetails.svelte'\nimport { flashtime } from '../../util.js'\n\nlet selectedAnalyses = [];\nlet notif = {errors: {}, messages: {}}\nlet uploadVisible = false;\nlet treatItems;\nlet detailsVisible = false;\nlet analyses;\n\nconst tablefields = [\n  {id: 'jobstate', name: '__hourglass-half', type: 'state', multi: false, links: 'jobid', linkroute: '#/jobs'},\n  {id: 'name', name: 'Analysis name', type: 'str', multi: false},\n  {id: 'files', name: '', help: 'Input files', type: 'icon', icon: 'database', multi: false, links: 'fn_ids', linkroute: '#/files'},\n  {id: 'datasets', name: '', help: 'Datasets', type: 'icon', icon: 'clipboard-list', multi: false, links: 'dset_ids', linkroute: '#/datasets'},\n  {id: 'wf', name: 'Workflow', type: 'str', multi: false, links: 'wflink'},\n  {id: 'usr', name: 'Users', type: 'str', multi: false},\n  {id: 'date', name: 'Date', type: 'str', multi: false},\n  {id: 'actions', name: 'Actions', type: 'button', multi: true},\n];\n\nconst fixedbuttons = [\n  {name: '__redo', alt: 'Refresh analysis info', action: refreshAnalysis},\n]\n\nfunction editAnalysis(anid) {\n  window.open(`/analysis/${anid}`, '_blank');\n} \n\n\nfunction stopJob(anid) {\n  const callback = (analysis) => {refreshAnalysis(analysis.id)};\n  treatItems('/analysis/stop/', 'job for analysis', 'stopping', callback, [anid]);\n}\n\nfunction startJob(anid) {\n  const callback = (analysis) => {refreshJob(analysis.id)};\n  treatItems('/analysis/start/', 'job for analysis', 'starting', callback, [anid]);\n}\n\nfunction doAction(action, anid) {\n  const actionmap = {\n    edit: editAnalysis,\n    'stop job': stopJob,\n    'run job': startJob,\n  }\n  actionmap[action](anid);\n}\n\nasync function refreshAnalysis(nfsid) {\n  const resp = await getJSON(`/refresh/analysis/${nfsid}`);\n  if (!resp.ok) {\n    const msg = `Something went wrong trying to refresh analysis data for ${nfsid}: ${resp.error}`;\n    notif.errors[msg] = 1;\n     setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n   } else {\n     analyses[nfsid] = Object.assign(analyses[nfsid], resp);\n   }\n}\n\n\nconst statecolors = {\n  jobstate: {\n    wait: 'has-text-grey-light',\n    pending: 'has-text-info',\n    error: 'has-text-danger', \n    processing: 'has-text-warning', \n    revoking: 'has-text-grey-dark',\n    done: 'has-text-success',\n  },\n}\n\nfunction showDetails(event) {\n  detailsVisible = event.detail.ids;\n}\n\nasync function getAnalysisDetails(anaId) {\n\tconst resp = await getJSON(`/show/analysis/${anaId}`);\n  const links = resp.servedfiles.map(([link, name]) => { return `<div><a href=\"analysis/showfile/${link}\" target=\"_blank\">${name}</a></div>`}).join('\\n');\n  return `\n    <p><span class=\"has-text-weight-bold\">Workflow version:</span> ${resp.wf.update}</p>\n    <p>${resp.nrfiles} raw files from ${resp.nrdsets} dataset(s) analysed</p>\n    <p><span class=\"has-text-weight-bold\">Quant type:</span> ${resp.quants.join(', ')}</p>\n    <p>${links}</p>\n    <p><span class=\"has-text-weight-bold\">Last lines of log:</span></p>\n    <p class=\"is-family-monospace\">${resp.log.join('<br>')}</p>\n  `;\n}\n\nfunction deleteAnalyses() {\n  const callback = (analysis) => {analysis.deleted = true};\n  treatItems('/analysis/delete/', 'analysis', 'deleting', callback, selectedAnalyses);\n}\n\nfunction unDeleteAnalyses() {\n  const callback = (analysis) => {analysis.deleted = false};\n  treatItems('/analysis/undelete/', 'analysis', 'undeleting', callback, selectedAnalyses);\n}\n\n\nfunction purgeAnalyses() {\n  const callback = (analysis) => {analysis.deleted = true};\n  treatItems('/analysis/purge/', 'analysis', 'purging', callback, selectedAnalyses);\n}\n</script>\n\n<Tabs tabshow=\"Analyses\" notif={notif} />\n\n{#if selectedAnalyses.length}\n<a class=\"button\" on:click={deleteAnalyses}>Delete analyses</a>\n<a class=\"button\" on:click={unDeleteAnalyses}>Undelete analyses</a>\n<a class=\"button\" on:click={purgeAnalyses}>Purge analyses</a>\n{:else}\n<a class=\"button\" disabled>Delete analyses</a>\n<a class=\"button\" disabled>Undelete analyses</a>\n<a class=\"button\" disabled>Purge analyses</a>\n{/if}\n<a class=\"button\" on:click={e => uploadVisible = uploadVisible === false}>Upload FASTA</a>\n\n<Table tab=\"Analyses\" bind:items={analyses} bind:treatItems={treatItems} bind:notif={notif} bind:selected={selectedAnalyses} fetchUrl=\"/show/analyses\" findUrl=\"/find/analyses\" on:detailview={showDetails} getdetails={getAnalysisDetails} fixedbuttons={fixedbuttons} fields={tablefields} inactive={['deleted', 'purged']} statecolors={statecolors} on:rowAction={e => doAction(e.detail.action, e.detail.id)} />\n \n{#if uploadVisible}\n<Upload toggleWindow={e => uploadVisible = uploadVisible === false} />\n{/if}\n\n{#if detailsVisible}\n<Details closeWindow={() => {detailsVisible = false}} anaIds={detailsVisible} />\n{/if}\n","<script>\n\nimport {querystring, push} from 'svelte-spa-router';\nimport { getJSON } from '../../datasets/src/funcJSON.js'\nimport Table from './Table.svelte'\nimport Tabs from './Tabs.svelte'\nimport { flashtime } from '../../util.js'\n\nconst inactive = ['inactive'];\nlet selectedProjs = []\nlet notif = {errors: {}, messages: {}};\nlet detailsVisible = false;\nlet treatItems;\nlet purgeConfirm;\n\nconst tablefields = [\n  {id: 'name', name: 'Name', type: 'str', multi: false},\n//  {id: 'storestate', name: 'Stored', type: 'tag', multi: false, links: 'fn_ids', linkroute: '#/files/'},\n//  {id: 'jobstates', name: '__hourglass-half', type: 'state', multi: true, links: 'jobids', linkroute: '#/jobs'},\n  {id: 'ptype', name: 'Type', type: 'str', multi: false},\n  {id: 'start', name: 'Registered', type: 'str', multi: false},\n  {id: 'lastactive', name: 'Last active', type: 'str', multi: false},\n];\n\nconst statecolors = {\n  storestate: {\n    cold: 'is-info',\n    purged: 'is-danger', \n    complete: 'is-success', \n    'active-only': 'is-warning', \n    new: 'is-warning', \n    empty: 'is-light',\n    broken: 'is-light',\n  },\n  jobstates: {\n    wait: 'has-text-grey-light',\n    pending: 'has-text-info',\n    error: 'has-text-danger', \n    processing: 'has-text-warning', \n    done: 'has-text-success',\n  },\n}\n\nconst fixedbuttons = [\n]\n\nfunction showDetails(event) {\n  detailsVisible = event.detail.ids;\n}\n\n\nfunction setConfirm() {\n  purgeConfirm = true;\n  setTimeout(() => { purgeConfirm = false} , flashtime);\n}\n\nasync function getProjDetails(projid) {\n\tconst resp = await getJSON(`/show/project/${projid}`);\n  return `\n    <p><span class=\"has-text-weight-bold\">Storage amount:</span> ${resp.stored_total_xbytes}</p>\n    <p><span class=\"has-text-weight-bold\">Owners:</span> ${Object.values(resp.owners).join(', ')}</p>\n    <hr>\n    ${Object.entries(resp.nrstoredfiles).map(x => {return `<div>${x[1]} stored files of type ${x[0]}</div>`;}).join('')}\n    <div>Instrument(s) used: <b>${resp.instruments.join(', ')}</b></div>\n    `;\n}\n\nfunction archiveProject() {\n  const callback = (proj) => {proj.inactive = true; }\n  treatItems('datasets/archive/project/', 'project', 'archiving', callback, selectedProjs);\n}\n\nfunction reactivateProject() {\n  const callback = (proj) => {proj.inactive = false; }\n  treatItems('datasets/undelete/project/', 'project','reactivating', callback, selectedProjs);\n}\n\nfunction purgeProject() {\n  const callback = (proj) => {proj.inactive = true; }\n  treatItems('datasets/purge/project/', 'project', 'purging', callback, selectedProjs);\n}\n\n\n</script>\n\n<Tabs tabshow=\"Projects\" notif={notif} />\n\n{#if selectedProjs.length}\n<a class=\"button\" title=\"Move projects to cold storage (delete)\" on:click={archiveProject}>Retire projects</a>\n<a class=\"button\" title=\"Move projects to active storage (undelete)\" on:click={reactivateProject}>Reactivate projects</a>\n  {#if purgeConfirm}\n  <a class=\"button is-danger is-light\" title=\"PERMANENTLY delete projects from active and cold storage\" on:click={purgeProject}>Are you sure? Purge projects</a>\n  {:else}\n  <a class=\"button\" title=\"PERMANENTLY delete projects from active and cold storage\" on:click={setConfirm}>Purge projects</a>\n  {/if}\n{:else}\n<a class=\"button\" title=\"Move projects to cold storage (delete)\" disabled>Retire projects</a>\n<a class=\"button\" title=\"Move projects to active storage (undelete)\" disabled>Reactivate projects</a>\n<a class=\"button\" title=\"PERMANENTLY delete projects from active and cold storage\" disabled>Purge projects</a>\n{/if}\n\n<Table tab=\"Projects\" bind:treatItems={treatItems} bind:notif={notif} bind:selected={selectedProjs} fetchUrl=\"/show/projects\" findUrl=\"/find/projects\" getdetails={getProjDetails} fixedbuttons={fixedbuttons} fields={tablefields} inactive={inactive} statecolors={statecolors} on:detailview=\"\" />\n","import Datasets from './Datasets.svelte'\nimport Jobs from './Jobs.svelte'\nimport Files from './Files.svelte'\nimport Analyses from './Analysis.svelte'\nimport Projects from './Projects.svelte'\n\nconst routes = {\n    '/': Datasets,\n    '/datasets': Datasets,\n    '/jobs': Jobs,\n    '/projects': Projects,\n    '/files': Files,\n    '/analyses': Analyses,\n}\n\nexport default routes;\n","<script>\n\nimport Router from 'svelte-spa-router';\nimport routes from './routes';\nimport { onMount } from 'svelte';\nimport { getJSON } from '../../datasets/src/funcJSON.js'\n\nlet messages = false;\n\nfunction fetchData() {\n  fetchMessages();\n}\n\nasync function fetchMessages() {\n  let url = '/messages/';\n  const resp = await getJSON(url);\n  if (!('error' in resp)) {\n    messages = {};\n    messages.olddef = resp.olddef;\n    messages.purgable_analyses = resp.purgable_analyses;\n    messages.old_purgable_analyses = resp.old_purgable_analyses;\n  } else { console.log(resp); }\n}\n\nfunction get_purgable_analyses_ids(analyses) {\n  return `#/analyses/?ids=${analyses.join(',')}`;\n}\n\n\nonMount(async() => {\n  fetchData();\n})\n\n</script>\n\n<div class=\"container\">\n\n  {#if messages}\n  <article class=\"message is-info\"> \n    <div class=\"message-body\">\n      <h5 class=\"title is-5\">Admin news</h5>\n      {#if messages.purgable_analyses}\n      <div>There are <a target=\"_blank\" href={get_purgable_analyses_ids(messages.purgable_analyses)}>{messages.purgable_analyses.length} analyses</a> that can be purged</div>\n      {/if}\n      {#if messages.old_purgable_analyses}\n      <div><a target=\"_blank\" href={get_purgable_analyses_ids(messages.old_purgable_analyses)}>{messages.old_purgable_analyses.length} purgable analyses</a> are older than {messages.olddef}</div>\n      {/if}\n    </div>\n  </article>\n  {/if}\n\n  <Router {routes} />\n</div>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.querySelector('#apps')\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","HtmlTag","[object Object]","html","this","e","u","n","t","innerHTML","Array","from","childNodes","m","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","createEvent","initCustomEvent","custom_event","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","undefined","bound","create_component","mount_component","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","ready","ret","rest","hydrate","nodes","l","intro","SvelteComponent","$destroy","indexOf","splice","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","$loc","routes","prefix","RouteItem","path","_sveltesparouter","charAt","RegExp","pattern","keys","str","loose","tmp","ext","arr","split","shift","substring","regexparam","route","conditions","userData","_pattern","_keys","startsWith","matches","exec","out","routesList","componentParams","dispatch","dispatchNextTick","setTimeout","match","checkConditions","async","parseResponse","response","jsonresp","json","error","ok","status","getJSON","url","fetch","postJSON","postdata","method","headers","Content-Type","body","JSON","stringify","x","dsname","indir","shareId","toggleWindow","allshares","dirsaredsets","dirsfound","dsets","instruments","view","initUserUpload","resp","shares","id","console","log","dirname","replaceAll","share_id","nrraw","files","instrument_id","concat","keyCode","flashtime","confirm","field","rowid","help","icon","color","inactive","confirmReady","action","alt","some","links","multi","linkroute","toLowerCase","items","fields","statecolors","fixedbuttons","getdetails","fetchUrl","findUrl","notif","tab","treatItems","operationmsg","itemids","itemid","item_id","msg","messages","errors","loadingNonce","order","findQueryString","showDetailBox","detailsLoaded","detailBoxContent","searchdeleted","loadingItems","fetchItems","ids","loadItems","join","findItems","q","showDetails","itemId","clickSingleDetails","localNonce","qs","fromEntries","$querystring","deleted","hash","group","checked","button","row","entries","tabshow","slot_ctx","lets","merged","len","Math","max","closeWindow","allowners","qtype","pwiz_versions","pwiz_sets","refine_versions","existing","state","version","created","refined","refineready","storage_loc","nrstoredfiles","owners","new_owners","oldowners","difference","reduce","cur","dsetIds","owner_to_add","replace_pwiz_id","refine_v_touse","convertDset","dsid","pwiz_id","cleanFetchDetails","refineDset","refine_id","changeOwner","owner","op","dataset_id","fetchDetails","dsetids","fetchedDsets","tasks","dsetId","all","Ready","Incomplete","Processing","usrid","pw","dset","is_staff","getDsetDetails","showMeta","open","importVisible","selectedDsets","detailsVisible","purgeConfirm","storestate","cold","purged","complete","active-only","new","broken","jobstates","wait","processing","done","getJobDetails","jobId","errmsg","procpen","jobs","selectedjobs","retryJob","jobid","job","refreshJob","pauseJob","deleteJob","jobAction","retry","force retry","pause","description","producer","server","fnIds","newname","fetched","singleId","filename","fnid","sf_id","getFileDetails","fnId","selectedFiles","cleanupsize","fetchingCleanup","stored","queue_job","mzml_cleanupsize_raws","upload_ftypeid","uploadError","uploadSuccess","uploadRunning","uploaddesc","selectedFile","ftypes","waiting","getUploadableFiletypes","upload_ftypes","fdata","FormData","credentials","success","base_analysis","nfsid","nrdsets","nrfiles","invocation","sampletable","wf","quants","params","storage_locs","servedfiles","multifiles","anaIds","analyses","anaids","fetchedAna","anaId","getAnalysisDetails","editAnalysis","anid","link","selectedAnalyses","uploadVisible","stopJob","analysis","refreshAnalysis","startJob","doAction","edit","stop job","run job","jobstate","revoking","getProjDetails","projid","stored_total_xbytes","selectedProjs","proj","/","Datasets","/datasets","/jobs","/projects","/files","/analyses","purgable_analyses","old_purgable_analyses","get_purgable_analyses_ids","olddef","fetchData","fetchMessages"],"mappings":"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"}