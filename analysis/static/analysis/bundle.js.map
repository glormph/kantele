{"version":3,"file":"bundle.js","sources":["../../../frontend/analysis/node_modules/svelte/internal/index.mjs","../../../frontend/util.js","../../../frontend/datasets/src/funcJSON.js","../../../frontend/analysis/src/App.svelte","../../../frontend/analysis/src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment && $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += \" \" + name + \"=\" + JSON.stringify(String(value)\n                .replace(/\"/g, '&#34;')\n                .replace(/'/g, '&#39;'));\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (has_prop(component.$$.props, name)) {\n        name = component.$$.props[name] || name;\n        component.$$.bound[name] = callback;\n        callback(component.$$.ctx[name]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, props) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : prop_values;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","export const flashtime = 5000;\n\n//export function flashError(errors, errormsg) {\n//  errors[errormsg] = 1;\n//  errors = errors;\n//  setTimeout(function() {\n//    errors[errormsg]);\n//    errors = errors;\n//    console.log(errors);\n//  }, 1000);\n//  return errors;\n//}\n//\n\n","async function parseResponse(response) {\n  let jsonresp;\n  try {\n    jsonresp = await response.json();\n  } catch(error) {\n    // Non-JSON responses, e.g. HTTP 500 server crash\n    return {ok: false, error: 'Server error encountered', status: response.status};\n  }\n  // Deliver HTTP errors if any\n  jsonresp.ok = response.ok;\n  return jsonresp;\n}\n\n\nexport async function getJSON(url) {\n  let response;\n  try {\n    response = await fetch(url);\n  } catch {\n      return {ok: false, error: 'Kantele encountered a network error', status: false}\n  }\n  return await parseResponse(response);\n}\n\n\nexport async function postJSON(url, postdata) {\n  let response;\n  try {\n    response = await fetch(url, {\n      method: 'POST', headers: {\n        'Content-Type': 'application/json'\n      }, body: JSON.stringify(postdata)\n    });\n  } catch {\n    return {ok: false, error: 'Kantele encountered a network error', status: false}\n  }\n  return await parseResponse(response);\n}\n","<script>\n\nimport { onMount } from 'svelte';\nimport { flashtime } from '../../util.js'\nimport { getJSON, postJSON } from '../../datasets/src/funcJSON.js'\n\nlet notif = {errors: {}, messages: {}, links: {}};\nlet loadingItems = false;\n\nlet runButtonActive = true;\nlet postingAnalysis = false;\n\nlet allwfs = {};\nlet wf = false;\nlet wforder = [];\nlet dsets = {};\n\n/* API v1:\n- no mixed isobaric\n- no mixed instruments\n- mixed dtype is ok i guess, but stupid\n- use invisible flags (check that stuff, deqmspossible, nf1901, nf-coremarker: could ALL be removed?)\n  Can at least remove from passing to NF pipe\n- isobaric passing to pipeline in a certain way (flags, sets etc)\n- predefined files in old version\n- version switcher for new version\n \nAPI v2:\n- TEST mods / locptms require multi-checkbox\n  - locptms also need fix in pipeline: acetyl + TMT is not done yet, only allow phos atm\n- Backend: instrument type to mzmldef\n- TEST This is backend only: isobaric spec as --isobaric set1:tmt10plex:126 set2:6plex:sweep\n- TEST multi DBs, pass to multifiles \n   - DB should know whether to multi, \n   - task singlefiles on backedn, create a multifiles which makes dirs\n\nTest\n- MULTIFILE backend needs testing, pre-run task test can already be done in QC, LC, DDA\n  - No, then you'd have to update client as well\n- multi checkboxes need testing as well\n- \n- normal hirief\n- labelfree?\n- filesaresets (eg LG)\n- labelcheck\n- 6FT, vardb\n- nf-core version config\n*/\n\n// API v1 instype is not important in v2\n\nlet isoquants = {};\nlet mediansweep = false;\n\nlet config = {\n  wfid: false,\n  wfversion: false,\n  analysisname: '',\n  flags: [],\n  multicheck: [],\n  fileparams: {},\n  multifileparams: {},\n  v1: false,\n  v2: false,\n  version_dep: {\n    v1: {\n      instype: false,\n      dtype: false,\n    }\n  },\n}\nlet matchedFr = {};\nlet frregex = {};\n\nfunction validate() {\n  notif = {errors: {}, messages: {}, links: {}};\n  const charRe = RegExp('^[a-z0-9_-]+$', 'i');\n  if (!config.analysisname) {\n\t  notif.errors['Analysisname must be filled in'] = 1;\n\t} else if (!charRe.test(config.analysisname)) {\n\t\tnotif.errors['Analysisname may only contain a-z 0-9 _ -'] = 1;\n\t}\n\tif (!config.wfid) {\n\t\tnotif.errors['You must select a workflow'] = 1;\n\t}\n  if (!config.wfversion) {\n\t\tnotif.errors['You must select a workflow version'] = 1;\n\t}\n  Object.values(dsets).forEach(ds => {\n    if (config.version_dep.v1.dtype.toLowerCase() !== 'labelcheck' && !ds.filesaresets && !ds.setname) {\n\t\t\tnotif.errors[`Dataset ${ds.proj} - ${ds.exp} - ${ds.run} needs to have a set name`] = 1;\n    } else if (ds.filesaresets) {\n      if (ds.files.filter(fn => !fn.setname).length) {\n\t\t\t  notif.errors[`File ${fn.name} needs to have a setname`] = 1;\n\t\t\t}\n    } else if (ds.setname && !charRe.test(ds.setname)) {\n\t\t\tnotif.errors[`Dataset ${ds.proj} - ${ds.exp} - ${ds.run} needs to have another set name: only a-z 0-9 _ are allowed`] = 1;\n\t\t}\n\t});\n  Object.entries(isoquants).forEach(([sname, isoq]) => {\n    Object.entries(isoq.samplegroups).forEach(([ch, sgroup]) => {\n      if (sgroup && !charRe.test(sgroup)) {\n        notif.errors[`Incorrect sample group name for set ${sname}, channel ${ch}, only A-Z a-z 0-9 _ are allowed`] =1; \n      }\n    })\n  })\n  return Object.keys(notif.errors).length === 0;\n}\n\n\nasync function runAnalysis() {\n  if (!validate()) {\n  \treturn false;\n  }\n  runButtonActive = false;\n  postingAnalysis = true;\n  notif.messages['Validated data'] = 1;\n  let fns = Object.fromEntries(Object.entries(config.fileparams).filter(([k,v]) => v))\n  wf.fixedfileparams.forEach(fn => {\n    fns[fn.nf] = fn.id\n  })\n  let multifns = Object.fromEntries(Object.entries(config.multifileparams).map(([k, v]) => [k, Object.values(v).filter(x => x)]).filter(([k, v]) => v.length));\n  let setnames = {};\n  Object.values(dsets).filter(ds => ds.filesaresets).forEach(ds => {\n    Object.assign(setnames, Object.fromEntries(ds.files.map(fn => [fn.id, fn.setname])));\n  });\n  Object.values(dsets).filter(ds => !ds.filesaresets).forEach(ds => {\n    Object.assign(setnames, Object.fromEntries(ds.files.map(fn => [fn.id, ds.setname])));\n  });\n\n  const fractions = Object.fromEntries(Object.values(dsets).flatMap(ds => ds.files.map(fn => [fn.id, fn.fr])));\n\n  notif.messages[`${Object.keys(setnames).length} set(s) found`] = 1;\n  notif.messages[`Using ${Object.keys(dsets).length} dataset(s)`] = 1;\n  notif.messages[`${Object.keys(fns).length} other inputfiles found`];\n  let post = { \n    setnames: setnames,\n    dsids: Object.keys(dsets),\n    fractions: fractions,\n    singlefiles: fns,\n    multifiles: multifns,\n    wfid: config.wfid,\n    nfwfvid: config.wfversion.id,\n    analysisname: `${allwfs[config.wfid].wftype}_${config.analysisname}`,\n    strips: {},\n    params: {\n      flags: config.flags,\n      multi: config.multicheck.reduce((acc, x) => {acc[x[0]].push(x[1]); return acc}, Object.fromEntries(config.multicheck.map(x => [x[0], []]))),\n    },\n  };\n  if (config.v1) {\n    post.params.inst = ['--instrument', config.version_dep.v1.instype];\n    post.params.quant = config.version_dep.v1.qtype === 'labelfree' ? [] : ['--isobaric', config.version_dep.v1.qtype];\n  }\n  // HiRIEF\n  Object.values(dsets).forEach(ds => {\n    post.strips[ds.id] = ds.hr ? ds.hr : ds.prefrac ? 'unknown_plate' : false\n  })\n  // general denoms = [[set1, [126, 127], tmt10plex], [set2, [128, 129], tmt6plex]]\n  let denoms = Object.entries(isoquants).map(([sname, isoq]) => \n    [sname, Object.entries(isoq.denoms).filter(([ch, val]) => val).map(([ch, val]) => ch), isoq.chemistry]\n   )\n  // TODO This filters sets without denoms, possibly change this for when not using any (e.g. intensities instead)\n  denoms = denoms.filter(([sn, chs, chem]) => chs.length > 0)\n  // mediansweep is only active at 1-set analyses, otherwise it is supposed to not make sense, so we can have global flag\n  if (denoms.length && !mediansweep && config.v1) {\n    // API v1: denoms: 'set1:126:127 set2:128:129'\n    post.params.denoms = ['--denoms', denoms.map(([sname, chs, chem]) => `${sname}:${chs.join(':')}`).join(' ')];\n  } else if (denoms.length && !mediansweep && !config.v1) {\n    // API v2: isobaric: 'set1:tmt10plex:126:127 set2:itraq8plex:114'\n    post.params.denoms = ['--isobaric', denoms.map(([sname, chs, chem]) => `${sname}:${chem}:${chs.join(':')}`).join(' ')]\n  }\n\n  // sampletable [[ch, sname, groupname], [ch2, sname, samplename, groupname], ...]\n  // we can push sampletables on ANY workflow as nextflow will ignore non-params\n  let sampletable = Object.entries(isoquants).flatMap(([sname, isoq]) => \n    Object.entries(isoq.channels).map(([ch, sample]) => [ch, sname, sample, isoq.samplegroups[ch]]).sort((a, b) => {\n\t  return a[0].replace('N', 'A') > b[0].replace('N', 'A')\n    })\n  );\n  post.sampletable = sampletable.map(row => row.slice(0, 3).concat(row[3] ? row[3] : 'X__POOL'));\n   \n  // Post the payload\n  notif.messages[`Posting analysis job for ${this.analysisname}`] = 1;\n  const resp = await postJSON('/analysis/run/', post);\n  if (resp.error) {\n    notif.errors[resp.error] = 1;\n    if ('link' in resp) {\n      notif.links[resp.link] = 1;\n    }\n  } else {\n\t  window.location.href = '/?tab=searches';\n\t}\n  postingAnalysis = false;\n  runButtonActive = true;\n}\n\n\nasync function fetchWorkflow() {\n  let url = new URL('/analysis/workflow', document.location)\n  const params = {dsids: dsids.join(','), wfvid: config.wfversion.id};\n  url.search = new URLSearchParams(params).toString();\n  const result = await getJSON(url);\n  loadingItems = true;\n  if ('error' in result) {\n    const msg = `While fetching workflow versions, encountered: ${result.error}`;\n    notif.errors[msg] = 1;\n    setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n  } else {\n    wf = result['wf'];\n    config.v1 = wf.analysisapi === 1;\n    config.v2 = wf.analysisapi === 2;\n  }\n  if (wf.multifileparams.length) {\n    config.multifileparams = Object.fromEntries(wf.multifileparams.map(x => [x.nf, {0: ''}]));\n  }\n  fetchDatasetDetails();\n}\n\nasync function fetchAllWorkflows() {\n  let url = new URL('/analysis/workflows', document.location)\n  const result = await getJSON(url);\n  loadingItems = true;\n  if ('error' in result) {\n    const msg = `While fetching workflows, encountered: ${result.error}`;\n    notif.errors[msg] = 1;\n    setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n  } else {\n    allwfs = result.allwfs;\n    wforder = result.order;\n  }\n}\n\nasync function fetchDatasetDetails() {\n  let url = new URL('/analysis/dsets/', document.location)\n  const params = {dsids: dsids.join(',')};\n  url.search = new URLSearchParams(params).toString();\n  const result = await getJSON(url);\n  if (result.error) {\n    const msg = result.errmsg;\n    notif.errors[msg] = 1;\n    setTimeout(function(msg) { notif.errors[msg] = 0 } , flashtime, msg);\n  } else {\n    dsets = result.dsets;\n    Object.entries(dsets).filter(x=>x[1].prefrac).forEach(x=>matchFractions(dsets[x[0]]));\n    Object.entries(dsets).forEach(ds => {\n      ds.filesaresets = false;\n      ds.setname = '';\n    })\n    // API v1 stuff\n    const dtypes = new Set(Object.values(dsets).map(ds => ds.dtype.toLowerCase()));\n    config.version_dep.v1.dtype = dtypes.size > 1 ? 'mixed' : dtypes.keys().next().value;\n    const qtypes = new Set(Object.values(dsets).map(ds => ds.details.qtypeshort));\n    if (config.v1 && qtypes.size > 1) {\n      notif.errors['Mixed quant types detected, cannot use those in single run, use more advanced pipeline version'] = 1;\n    } else {\n      config.version_dep.v1.qtype = qtypes.keys().next().value;\n    }\n    const instypes = new Set(Object.values(dsets).flatMap(ds => ds.details.instrument_types).map(x => x.toLowerCase()));\n    if (config.v1 && instypes.size> 1) {\n      notif.errors['Mixed instrument types detected, cannot use those in single run, use more advanced pipeline version'] = 1;\n    } else {\n      config.version_dep.v1.instype = instypes.keys().next().value;\n    }\n  }\n}\n\nfunction removeMultifile(nf, key) {\n  delete(config.multifileparams[nf][key]);\n  let newmfp = {}\n  Object.keys(config.multifileparams[nf]).forEach((k, ix) => {\n    newmfp[ix] = config.multifileparams[nf][k]\n  });\n  config.multifileparams[nf] = newmfp;\n}\n\nfunction addMultifile(nf) {\n  const keyints = Object.keys(config.multifileparams[nf]).map(x => +x);\n  const newkey = keyints.length ? Math.max(...keyints) + 1 : 0;\n  config.multifileparams[nf][newkey] = '';\n}\n\nfunction matchFractions(ds) {\n  let allfrs = new Set();\n  for (let fn of ds.files) {\n    const match = fn.name.match(RegExp(frregex[ds.id]));\n    if (match) {\n      fn.fr = match[1];\n      allfrs.add(match[1]);\n    } else {\n      fn.fr = 'NA';\n    }\n  }\n\tmatchedFr[ds.id] = allfrs.size;\n}\n\nfunction sortChannels(channels) {\n  return Object.entries(channels).sort((a,b) => {\n\t  return a[0].replace('N', 'A') > b[0].replace('N', 'A')\n  }).map(x => {return {ch: x[0], sample: x[1]}});\n}\n\nfunction updateIsoquant() {\n  // Add new set things if necessary\n  Object.values(dsets).forEach(ds => {\n    const errmsg = `Sample set mixing error! Channels for datasets with setname ${ds.setname} are not identical!`;\n    notif.errors[errmsg] = 0;\n    if (ds.setname && !(ds.setname in isoquants)) {\n      isoquants[ds.setname] = {\n        chemistry: ds.details.qtypeshort,\n        channels: ds.details.channels,\n        samplegroups: Object.fromEntries(Object.keys(ds.details.channels).map(x => [x, ''])),\n        denoms: Object.fromEntries(Object.keys(ds.details.channels).map(x => [x, false]))\n      };\n    } else if (ds.setname && ds.setname in isoquants) {\n      if (isoquants[ds.setname].channels !== ds.details.channels) {\n        notif.errors[errmsg] = 1;\n      }\n    }\n  });\n  // Remove old sets from isoquants if necessary\n  const dset_sets = new Set(Object.values(dsets).map(ds => ds.setname).filter(x => x));\n  Object.keys(isoquants).filter(x => !(dset_sets.has(x))).forEach(x => {\n    delete(isoquants[x])\n  });\n  isoquants = Object.assign({}, isoquants);  // assign so svelte notices (doesnt act on deletion)\n}\n\nonMount(async() => {\n  frregex = Object.fromEntries(dsids.map(dsid => [dsid, '.*fr([0-9]+).*mzML$']));\n  fetchAllWorkflows();\n})\n</script>\n\n<style>\n.errormsg {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 20px;\n  z-index: 50000;\n}\n</style>\n\n<div class=\"errormsg\">\n{#if Object.values(notif.errors).some(x => x === 1)}\n<div class=\"notification is-danger is-light\"> \n    {#each Object.entries(notif.errors).filter(x => x[1] == 1).map(x=>x[0]) as error}\n    <div>{error}</div>\n    {/each}\n</div>\n{/if}\n\n{#if Object.values(notif.links).some(x => x === 1)}\n<div class=\"notification is-danger is-light errormsg\"> \n    {#each Object.entries(notif.links).filter(x => x[1] == 1).map(x=>x[0]) as link}\n    <div>Click here: <a target=\"_blank\" href={link}>here</a></div>\n    {/each}\n</div>\n{/if}\n\n{#if Object.values(notif.messages).some(x => x === 1)}\n<div class=\"notification is-success is-light errormsg\"> \n    {#each Object.entries(notif.messages).filter(x => x[1] == 1).map(x=>x[0]) as message}\n    <div>{message}</div>\n    {/each}\n</div>\n{/if}\n</div>\n\n<div class=\"content\">\n\t<div class=\"title is-5\">Analysis </div>\n\t<div class=\"field is-horizontal\">\n    <div class=\"field-label is-normal\">\n      <label class=\"label\">Workflow:</label>\n    </div>\n    <div class=\"field-body\">\n      <div class=\"field\">\n        <div class=\"select\">\n          <select bind:value={config.wfid} on:change={e => wf = config.wfversion = false}>\n            <option disabled value={false}>Select workflow</option>\n            {#each wforder as wfid}\n            <option value={wfid}>{allwfs[wfid].name} </option>\n            {/each}\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"field-label is-normal\">\n      <label class=\"label\">Workflow version:</label>\n    </div>\n    <div class=\"field-body\">\n      <div class=\"field\">\n        <div class=\"select\" on:change={fetchWorkflow}>\n          <select bind:value={config.wfversion}>\n            <option disabled value={false}>Select workflow version</option>\n            {#if config.wfid}\n            {#each allwfs[config.wfid].versions as wfv}\n            <option value={wfv}>\n              {#if wfv.latest}\n              <span>LATEST: </span>\n              {/if}\n              {wfv.date} -- {wfv.name}\n            </option>\n            {/each}\n            {/if}\n          </select>\n        </div>\n      </div>\n    </div>\n\t</div>\n\n\n  {#if wf}\n\t<div class=\"field\">\n    <input type=\"text\" class=\"input\" bind:value={config.analysisname} placeholder=\"Please enter analysis name\">\n    <div>Full name will be <code>{allwfs[config.wfid].wftype}_{config.analysisname}</code>\n    This will be the folder name for the output and prefixed to the output filenames\n    </div>\n\t</div>\n\n  <!-------------------------- ############### API v1? -->\n\t<div class=\"title is-5\">Datasets</div>\n  {#each Object.values(dsets) as ds}\n  <div class=\"box\">\n    {#if ds.dtype.toLowerCase() === 'labelcheck'}\n    <span class=\"has-text-primary\">{ds.proj} // Labelcheck // {ds.run} // {ds.details.qtype} // {ds.details.instruments.join(',')}</span>\n    {:else}\n\t\t<div class=\"columns\">\n\t\t  <div class=\"column\">\n        {#if !ds.prefrac}\n        <input type=\"checkbox\" bind:checked={ds.filesaresets}>\n\t\t\t\t<label class=\"checkbox\">Each file is a different sample</label>\n        {/if}\n        {#if !ds.filesaresets}\n\t\t\t  <div class=\"field\">\n          <input type=\"text\" class=\"input\" placeholder=\"Name of set\" bind:value={ds.setname} on:change={updateIsoquant}>\n\t\t\t  </div>\n        {/if}\n\t\t\t  <div class=\"subtitle is-6 has-text-primary\">\n          <span>{ds.proj} // {ds.exp} // {ds.run} //</span>\n          {#if !ds.prefrac}\n          <span>{ds.dtype}</span>\n          {:else if ds.hr}\n          <span>{ds.hr}</span>\n          {:else}\n          <span>{ds.prefrac}</span>\n          {/if}\n\t\t\t  </div>\n\t\t\t  <div class=\"subtitle is-6\">\n\t\t\t\t  <span>{ds.details.qtype} </span>\n          {#each Object.entries(ds.details.nrstoredfiles) as sf}\n\t\t      <span> // {sf[1]} {sf[0]} files </span>\n          {/each}\n\t\t\t\t  <span>// {ds.details.instruments.join(', ')} </span>\n\t\t\t  </div>\n        {#if ds.details.nrstoredfiles.refined_mzML}\n\t\t\t  <div class=\"subtitle is-6\"><strong>Enforcing use of refined mzML(s)</strong></div>\n        {/if}\n\t\t\t</div>\n\t\t\t<div class=\"column\">\n        {#if ds.prefrac}\n        <div class=\"field\">\n\t\t\t\t\t<label class=\"label\">Regex for fraction detection</label>\n          <input type=\"text\" class=\"input\" on:change={e => matchFractions(ds)} bind:value={frregex[ds.id]}>\n\t\t\t\t</div>\n\t\t\t\t<span>{matchedFr[ds.id]} fractions matched</span>\n        {/if}\n\t\t\t</div>\n\t\t</div>\n    {#if ds.filesaresets}\n    {#each ds.files as fn}\n    <div class=\"columns\">\n\t\t  <div class=\"column\">{fn.name}</div>\n\t\t  <div class=\"column\">\n        <input type=\"text\" class=\"input\" bind:value={fn.setname} placeholder={fn.sample}>\n\t\t\t</div>\n\t\t</div>\n    {/each}\n    {/if}\n    {/if}\n  </div>\n  {/each}\n\n  {#if Object.keys(isoquants).length}\n  <div class=\"box\">\n\t\t<div class=\"title is-5\">Isobaric quantification</div>\n    {#if Object.keys(isoquants).length === 1}\n    <div class=\"field\">\n      <input type=\"checkbox\" bind:checked={mediansweep}>\n      <label class=\"checkbox\">Use median sweeping (no predefined denominators)\n        <span class=\"icon is-small\">\n          <a title=\"Pick median denominator per PSM, only for single-set analyses\"><i class=\"fa fa-question-circle\"></i></a>\n        </span>\n      </label>\n    </div>\n    {/if}\n    {#each Object.entries(isoquants) as isoq}\n    <div class=\"has-text-primary title is-6\">Set: {isoq[0]}</div>\n    <div class=\"columns\">\n      <div class=\"column is-three-quarters\">\n        <table class=\"table is-striped is-narrow\">\n          <thead>\n            <tr>\n              {#if !mediansweep}\n              <th>Denominator</th>\n              {:else}\n              <th><del>Denominator</del></th>\n              {/if}\n              <th>Channel</th>\n              <th>Sample name</th>\n              <th>Sample group \n                <span class=\"icon is-small\">\n                  <a title=\"For DEqMS and PCA plots\"><i class=\"fa fa-question-circle\"></i></a>\n                </span>\n                LEAVE EMPTY FOR INTERNAL STANDARDS!</th>\n      \t\t  </tr>\n          </thead>\n          <tbody>\n            {#each sortChannels(isoq[1].channels) as {ch, sample}}\n            <tr>\n              <td>\n                {#if !mediansweep}\n                <input type=\"checkbox\" bind:checked={isoq[1].denoms[ch]} />\n                {/if}\n              </td>\n              <td>{ch}</td>\n              <td>{sample}</td>\n              <td>\n                <input type=\"text\" class=\"input\" bind:value={isoq[1].samplegroups[ch]} placeholder=\"Sample group or empty (e.g. CTRL, TREAT)\">\n              </td>\n      \t\t  </tr>\n            {/each}\n          </tbody>\n        </table>\n      </div>\n    </div>\n    {/each}\n  </div>\n  {/if}\n\n  <div class=\"box\">\n    <div class=\"title is-5\">Workflow parameters</div>\n    {#each wf.multicheck as {nf, name, opts}}\n    <div class=\"field\">\n      <label class=\"label\">{name} <code>{nf}</code></label> \n      {#each Object.entries(opts) as opt}\n      <div>\n        <input value={[nf, opt[0]]} bind:group={config.multicheck} type=\"checkbox\">\n        <label class=\"checkbox\">{opt[1]}</label>\n      </div>\n      {/each}\n    </div>\n    {/each}\n\n    <label class=\"label\">Config flags</label>\n    {#each Object.entries(wf.flags) as flag}\n    <div>\n      <input value={flag[0]} bind:group={config.flags} type=\"checkbox\">\n      <label class=\"checkbox\">{flag[1]}</label>: <code>{flag[0]}</code>\n    </div>\n    {/each}\n\n    {#if !('flags' in wf) || !(Object.keys(wf.flags).length)}\n    <div>No parameters for this workflow</div>\n    {/if}\n\t</div>\n\n  <div class=\"box\">\n    <div class=\"title is-5\">Input files</div>\n    {#each wf.multifileparams as filep}\n      <label class=\"label\">{filep.name}\n        <span class=\"icon is-small\">\n          <a on:click={e => addMultifile(filep.nf)} title=\"Add another file\"><i class=\"fa fa-plus-square\"></i></a>\n        </span>\n      </label>\n      {#each Object.keys(config.multifileparams[filep.nf]) as mfpkey}\n      <label class=\"label is-small\">\n        File nr. {mfpkey} \n        <span class=\"icon is-small\">\n          <a on:click={e => removeMultifile(filep.nf, mfpkey)} title=\"Remove this file\"><i class=\"fa fa-trash-alt\"></i></a>\n        </span>\n      </label>\n        <div class=\"field\">\n            <div class=\"select\">\n              <select bind:value={config.multifileparams[filep.nf][mfpkey]}>\n                <option disabled value=\"\">Please select one</option>\n                <option value=\"\">Do not use this parameter</option>\n                {#if filep.ftype in wf.libfiles}\n                {#each wf.libfiles[filep.ftype] as libfn}\n                <option value={libfn.id}>{libfn.name} -- {libfn.desc}</option>\n                {/each}\n                {/if}\n                {#if filep.allow_resultfile}\n                {#each wf.prev_resultfiles as resfile}\n                <option value={resfile.id}>{resfile.analysisname} -- {resfile.analysisdate} -- {resfile.name}</option>\n                {/each}\n                {/if}\n              </select>\n            </div>\n              </div>\n      {/each}\n    {/each}\n    {#each wf.fileparams as filep}\n    <div class=\"field\">\n      <label class=\"label\">{filep.name}</label>\n      <div class=\"select\">\n        <select bind:value={config.fileparams[filep.nf]}>\n          <option disabled value=\"\">Please select one</option>\n          <option value=\"\">Do not use this parameter</option>\n          {#if filep.ftype in wf.libfiles}\n          {#each wf.libfiles[filep.ftype] as libfn}\n          <option value={libfn.id}>{libfn.name} -- {libfn.desc}</option>\n          {/each}\n          {/if}\n          {#if filep.allow_resultfile}\n          {#each wf.prev_resultfiles as resfile}\n          <option value={resfile.id}>{resfile.analysisname} -- {resfile.analysisdate} -- {resfile.name}</option>\n          {/each}\n          {/if}\n        </select>\n      </div>\n    </div>\n    {/each}\n\t</div>\n\n  {#if wf.fixedfileparams.length}\n\t<div class=\"box\">\n    <div class=\"title is-5\">Predefined files</div>\n    {#each wf.fixedfileparams as ffilep}\n    <div class=\"field\">\n      <label class=\"label\">{ffilep.name}</label>\n      <div class=\"select\" >\n        <select>\n          <option disabled value=\"\">Fixed selection</option>\n          <option>{ffilep.fn} -- {ffilep.desc}</option>\n        </select>\n      </div>\n    </div>\n    {/each}\n  </div>\n  {/if}\n\n  {#if runButtonActive}\n  <a class=\"button is-primary\" on:click={runAnalysis}>Run analysis</a>\n  {:else if postingAnalysis}\n\t<a class=\"button is-primary is-loading\">Run analysis</a>\n  {:else}\n\t<a class=\"button is-primary\" disabled>Run analysis</a>\n  {/if}\n\n  {/if} \n</div>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.querySelector('#apps')\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","get_binding_group_value","group","checked","push","__value","set_data","set_input_value","input","select_option","select","option","selected","select_value","selected_option","querySelector","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","globals","window","global","make_dirty","key","then","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_destroy","context","Map","callbacks","ready","block","local","ret","hydrate","l","Array","from","childNodes","c","intro","delete","m","new_on_destroy","map","filter","mount_component","SvelteComponent","[object Object]","destroy_component","this","$destroy","type","index","indexOf","splice","flashtime","async","parseResponse","response","jsonresp","json","error","ok","status","getJSON","url","fetch","entries","notif","errors","links","messages","allwfs","wfid","config","versions","wfv","date","latest","wftype","analysisname","keys","isoquants","wf","flags","values","dsets","multicheck","multifileparams","fileparams","fixedfileparams","runButtonActive","postingAnalysis","ds","proj","exp","details","qtype","instruments","join","prefrac","filesaresets","hr","nrstoredfiles","refined_mzML","updateIsoquant","setname","dtype","sf","matchedFr","id","frregex","files","sample","toLowerCase","isoq","denoms","ch","mediansweep","samplegroups","sortChannels","channels","opt","nf","opts","flag","libfiles","filep","ftype","libfn","desc","prev_resultfiles","resfile","analysisdate","allow_resultfile","mfpkey","ffilep","runAnalysis","some","wforder","wfversion","fetchWorkflow","sort","replace","x","v1","v2","version_dep","instype","removeMultifile","newmfp","k","ix","addMultifile","keyints","newkey","Math","max","matchFractions","allfrs","match","RegExp","fr","size","fromEntries","dsids","dsid","URL","location","result","msg","setTimeout","order","fetchAllWorkflows","charRe","test","sname","sgroup","validate","v","multifns","setnames","assign","fractions","flatMap","post","singlefiles","multifiles","nfwfvid","strips","params","multi","reduce","acc","inst","quant","val","chemistry","sn","chs","chem","sampletable","row","slice","concat","resp","postdata","method","headers","Content-Type","body","JSON","stringify","postJSON","link","href","wfvid","search","URLSearchParams","toString","analysisapi","0","errmsg","dtypes","next","qtypes","qtypeshort","instypes","instrument_types","fetchDatasetDetails","dset_sets","e"],"mappings":"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"}