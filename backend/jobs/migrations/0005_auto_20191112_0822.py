# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-11-12 08:22
from __future__ import unicode_literals

from django.db import migrations
import json
from jobs.jobs import Jobstates

# Migrate to the new NF job serialization format (more kwargs, less args)
# which is a SMALL step forward to more structure
# And remove the wf_id from the job since it is not used in it.

def migrate_nf_job_args_to_kwargs(apps, schema_editor):
    Job = apps.get_model('jobs', 'Job')
    for job in Job.objects.filter(funcname='run_ipaw_nextflow'):
        args = json.loads(job.args)
        # We have some OLD jobs (latest is 2018-06) in the system which 
        # will not be migrated, we may delete them later on, but avoid
        # that here and keep them in. They are already incompatible
        # with rerun, display etc. Skip them here:
        if type(args[1]) != dict:
            continue
        kwargs = {
                'platenames': args[1],
                'fractions': args[2],
                'setnames': args[3],
                'analysis_id': args[4],
                'wfv_id': args[6],
                'inputs': args[7],
                }
        job.funcname = 'run_nf_search_workflow'
        job.args = json.dumps([args[0], *args[8:]])
        job.kwargs = json.dumps(kwargs)
        job.save()


def revert_nf_job_kwargs_to_args(apps, schema_editor):
    Job = apps.get_model('jobs', 'Job')
    Analysis = apps.get_model('analysis', 'Analysis')
    wfmap = {x.id: x.nextflowsearch.workflow_id for x in Analysis.objects.select_related('nextflowsearch').all() if hasattr(x, 'nextflowsearch')}
    for job in Job.objects.filter(funcname='run_nf_search_workflow').exclude(state=Jobstates.CANCELED).exclude(kwargs='{}'):
        args = json.loads(job.args)
        kwargs = json.loads(job.kwargs)
        #print(job.id, job.state, job.timestamp, job.args, job.kwargs)
        try:
            wf_id = wfmap[kwargs['analysis_id']]
        except KeyError:
            wf_id = False
            print(job.id)
        oldargs = [args[0], kwargs['platenames'], kwargs['fractions'], 
                kwargs['setnames'], kwargs['analysis_id'], 
                wf_id, kwargs['wfv_id'], kwargs['inputs'],
                *args[1:]]
        job.funcname = 'run_ipaw_nextflow'
        job.args = json.dumps(oldargs)
        job.kwargs = json.dumps({})
        job.save()


class Migration(migrations.Migration):

    dependencies = [
        ('jobs', '0004_task_args'),
        ('analysis', '0015_ensemblfasta_uniprotfasta'),
        ('rawstatus', '0013_auto_20190913_1932'),
    ]

    operations = [
        migrations.RunPython(migrate_nf_job_args_to_kwargs, revert_nf_job_kwargs_to_args),
    ]
