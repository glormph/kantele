--- 
# Deploy kantele web system

- hosts: kantele
  become: yes
  become_user: '{{ kanteleuser }}'
  tasks:
      - name: Clone repo
        ansible.builtin.git:
            repo: '{{ kantele_repo }}'
            dest: '{{ kanteledir }}'
            version: master

      - name: Deploy templates with env variables for compose script and container insides
        ansible.builtin.template:
            src: '{{ item[0] }}'
            dest: '{{ item[1] }}'
        loop:
            - ['.compose.prod.env.j2', '{{ compose_env_file }}']
            - ['container_env_vars.j2', '{{ kanteledir }}/src/docker/prod-container.env']
            - ['nginx_prod.conf.j2', '{{ kanteledir }}/src/docker/nginx.conf']

      - name: Build and start production docker containers
        community.docker.docker_compose:
            project_src: '{{ kanteledir }}'
            files:
                - '{{ kanteledir }}/src/docker/docker-compose-base.yml'
                - '{{ kanteledir }}/src/docker/docker-compose-prod.yml'
            env_file: '{{ compose_env_file }}'
            build: yes
            state: present
        environment:
            - USER_ID: '{{ kanteleuid }}'
            - GROUP_ID: '{{ kantelegid }}'

      - name: Perform any outstanding migrations
        ansible.builtin.command:
            cmd: "docker-compose --env-file {{ compose_env_file }} -f src/docker/docker-compose-base.yml -f src/docker/docker-compose-prod.yml exec web python manage.py migrate"
            chdir: "{{ kanteledir }}"
        
         
      - name: Cron job for downloading ENSEMBL/swiss fasta
        ansible.builtin.cron:
            name: Schedule job to download new FASTA 
            hour: "*/4"
            job: "cd {{ kanteledir }} && docker-compose --env {{ compose_env_file }} -f src/docker/docker-compose-base.yml -f src/docker/docker-compose-prod.yml exec -T web python manage.py download_latest_fasta "

