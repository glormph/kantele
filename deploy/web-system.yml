--- 

# Prepare server for Kantele on Ubuntu 20.04 LTS
# FIXME BACKUP needs cron job, and a way to export backup result
# TODO: 22.04.1 is out in Aug 2022, then we can use docker-compose 1.29 and better spec of compose.yml
# TODO: configure rsyslog to listen on TCP/UDP

- hosts: production
  become: yes
  tasks:
      - name: Package install
        ansible.builtin.apt:
            update_cache: yes
            name: "{{ item }}"
            state: present
        loop:
            - docker.io
            - docker-compose
            - ufw # uncomplicated firewall
            - acl # permissions management for ansible user-switching

      - name: UFW firewall Allow SSH for admins
        community.general.ufw:
            rule: allow
            name: OpenSSH
            src: "{{ item }}"
        loop: "{{ adminhosts }}"

      - name: UFW allow web traffic from user subnets 
        community.general.ufw:
            rule: allow
            src: '{{ item[0] }}'
            port: '{{ item[1] }}'
        loop: '{{ webuser_subnets | product(["http", "https"]) }}'

      - name: UFW allow message queue traffic from instruments/analysis/storage
        community.general.ufw:
            rule: allow
            src: "{{ item[0] }}"
            port: "{{ item[1] }}"
        loop: "{{ mq_subnets | product(['amqp', 'epmd', '25672']) }}"

        ## ssh rapunzel, ping rapunzel/gauss, 
      - name: Set last rule to deny all and reload UFW firewall
        community.general.ufw:
            policy: deny
            direction: incoming
            state: enabled

      - name: Create kantele group
        ansible.builtin.group:
            name: '{{ kantelegroup }}'

      - name: Create admin users
        ansible.builtin.user:
            name: '{{ item }}'
            shell: /bin/bash
            append: yes
            groups: '{{ kantelegroup }}'
        loop: '{{ adminusers }}'

      - name: Create user
        ansible.builtin.user:
            name: '{{ web_user }}'
            shell: /bin/bash
            append: yes
            groups:
                - '{{ kantelegroup }}'
                - docker

      - name: Put SSH pubkey in place
        ansible.posix.authorized_key:
            user: '{{ web_user }}'
            state: present
            key: "{{ lookup('file', 'ssh_key_rsync.pub') }}"

      - name: TLS certificate directory exists
        ansible.builtin.file:
            path: "{{ tls_path }}"
            state: directory
            owner: root
            group: root

      - name: Install TLS certificate
        ansible.builtin.copy:
            src: 'tls_server.crt'
            dest: "{{ tls_path }}/only_cert_no_chain.crt"
            owner: root
            group: root
            mode: 0644

      - name: Install TLS CA-cert bundle
        ansible.builtin.copy:
            src: 'ca.bundle.pem'
            dest: "{{ tls_path }}/ca.bundle.pem"
            owner: root
            group: root
            mode: 0644

      - name: Concatenate ca bundle and no-chain-crt
        ansible.builtin.shell: "cat {{ tls_path }}/only_cert_no_chain.crt {{ tls_path }}/ca.bundle.pem > {{ tls_path }}/{{ tls_cert }}"

      - name: Finalize TLS certificate (mode, ownership)
        ansible.builtin.file:
            path: "{{ tls_path }}/{{ tls_cert }}"
            owner: root
            group: root
            mode: 0644

      - name: Install TLS certificate key
        ansible.builtin.copy:
            src: 'tls_server.key'
            dest: "{{ tls_path }}/{{ tls_cert_key }}"
            owner: root
            group: root
            mode: 0600

      - name: Backup of SQL -- create local folder to restore files from and mount in container
        ansible.builtin.file:
            path: "{{ host_pgbackup_path }}"
            state: directory
            owner: "{{ web_user }}"
            group: "{{ kantelegroup }}"

      - name: Backup of SQL -- create backup folder on web server container host
        ansible.builtin.file:
            path: "{{ host_analysispath }}/{{ web_backupfolder }}"
            state: directory
            owner: "{{ web_user }}"
            group: "{{ kantelegroup }}"

      - name: Backup of SQL -- template out backup script
        ansible.builtin.template:
            src: "sql_dump_backup.j2"
            dest: "{{ kanteledir }}/backup_db.sh"
            owner: "{{ web_user }}"
            group: "{{ kantelegroup }}"

      - name: Backup of SQL -- crontab setup 
        # FIXME how to error report? Log to syslog on web?
        become: yes
        become_user: "{{ web_user }}"
        ansible.builtin.cron:
            name: Kantele DB dump backup
            hour: "2"
            minute: "*/5"
            job: "bash {{ kanteledir }}/backup_db.sh"
