#!/bin/bash

# On crontab, run this from e.g. 3AM until 6AM to download backup

set -euo pipefail

cd "{{ storage_backup_path }}"

dt="$(date -I)"
dstfile="pgbackup_${dt}.sql"
tmpfile="tmp_${dstfile}"

# Only run if no finished backup yet
if [[ -e $dstfile ]]
then
    exit 0
fi

# First delete >1 month files and tmpfiles
find ./ -name "pgbackup_*.sql" -mtime +30 -delete
find ./ -name "tmp_pgbackup_*" -delete

# Do the postgres dump
ssh -o StrictHostKeyChecking=no -i {{ rsync_ssh_key }} {{ web_user }}@{{ kantele_host }} "cd kantele && docker-compose --env {{ compose_env_file }} -f src/docker/docker-compose-base.yml -f src/docker/docker-compose-prod.yml exec -T db pg_dump -U {{ kanteledbuser }} -d {{ kanteledb }} -f '{{ container_backuppath }}/pgbackup.sql'"

# Add a line with MD5 to the dump
ssh -o StrictHostKeyChecking=no -i "{{ rsync_ssh_key }}" "{{ web_user }}@{{ kantele_host }}" "cat <(echo -- MD5SUM-backup \$(md5sum '{{ host_pgbackup_path }}/pgbackup.sql')) '{{ host_pgbackup_path }}/pgbackup.sql' > '{{ host_pgbackup_path }}/md5_pgbackup.sql'"

# transfer to storage
rsync -avz -e 'ssh -i "{{ rsync_ssh_key }}" -o StrictHostKeyChecking=no' "{{ web_user}}@{{ kantele_host }}:{{ host_pgbackup_path }}/md5_pgbackup.sql" "{{ storage_backup_path }}/$tmpfile"

# Verify MD5 and finalize
mdexpect=$(head -n1 "$tmpfile" | cut -f3 -d' ')
mdtest=$(grep -v "\-\- MD5SUM-backup" "$tmpfile" | md5sum | cut -f1 -d' ')
if [[ $mdexpect == $mdtest ]]
then
    mv "$tmpfile" "$dstfile"
else
    exit 1
fi
